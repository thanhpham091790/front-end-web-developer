{"id":"node_modules/data/data.js","dependencies":[{"name":"D:\\selftaught\\Front-end web deverloper\\tools\\parcel-experiment\\package.json","includedInParent":true,"mtime":1650575398222},{"name":"D:\\selftaught\\Front-end web deverloper\\tools\\parcel-experiment\\node_modules\\data\\package.json","includedInParent":true,"mtime":1650575354419},{"name":"underscore","loc":{"line":27,"column":58,"index":872},"parent":"D:\\selftaught\\Front-end web deverloper\\tools\\parcel-experiment\\node_modules\\data\\data.js","resolved":"D:\\selftaught\\Front-end web deverloper\\tools\\parcel-experiment\\node_modules\\underscore\\modules\\index-all.js"}],"generated":{"js":"//     (c) 2012 Michael Aufreiter\n//     Data.js is freely distributable under the MIT license.\n//     Portions of Data.js are inspired or borrowed from Underscore.js,\n//     Backbone.js and Google's Visualization API.\n//     For all details and documentation:\n//     http://substance.io/michael/data-js\n\n(function(){\n\n  // Initial Setup\n  // -------------\n\n  // The top-level namespace. All public Data.js classes and modules will\n  // be attached to this. Exported for both CommonJS and the browser.\n  var Data;\n  if (typeof exports !== 'undefined') {\n    Data = exports;\n  } else {\n    Data = this.Data = {};\n  }\n  \n  // Current version of the library. Keep in sync with `package.json`.\n  Data.VERSION = '0.6.1';\n\n  // Require Underscore, if we're on the server, and it's not already present.\n  var _ = this._;\n  if (!_ && (typeof require !== 'undefined')) _ = require(\"underscore\");\n  \n  // Top Level API\n  // -------\n\n  Data.VALUE_TYPES = [\n    'string',\n    'object',\n    'number',\n    'boolean',\n    'date'\n  ];\n\n\n  Data.isValueType = function (type) {\n    return _.include(Data.VALUE_TYPES, _.last(type));\n  };\n\n\n  /*!\n  Math.uuid.js (v1.4)\n  http://www.broofa.com\n  mailto:robert@broofa.com\n\n  Copyright (c) 2010 Robert Kieffer\n  Dual licensed under the MIT and GPL licenses.\n  */\n\n  Data.uuid = function (prefix) {\n    var chars = '0123456789abcdefghijklmnopqrstuvwxyz'.split(''),\n        uuid = [],\n        radix = 16,\n        len = 32;\n\n    if (len) {\n      // Compact form\n      for (var i = 0; i < len; i++) uuid[i] = chars[0 | Math.random()*radix];\n    } else {\n      // rfc4122, version 4 form\n      var r;\n\n      // rfc4122 requires these characters\n      uuid[8] = uuid[13] = uuid[18] = uuid[23] = '-';\n      uuid[14] = '4';\n\n      // Fill in random data.  At i==19 set the high bits of clock sequence as\n      // per rfc4122, sec. 4.1.5\n      for (var i = 0; i < 36; i++) {\n        if (!uuid[i]) {\n          r = 0 | Math.random()*16;\n          uuid[i] = chars[(i == 19) ? (r & 0x3) | 0x8 : r];\n        }\n      }\n    }\n    return (prefix ? prefix : \"\") + uuid.join('');\n  };\n\n\n\n  // _.Events\n  // -----------------\n\n  // Regular expression used to split event strings\n  var eventSplitter = /\\s+/;\n\n  // A module that can be mixed in to *any object* in order to provide it with\n  // custom events. You may bind with `on` or remove with `off` callback functions\n  // to an event; trigger`-ing an event fires all callbacks in succession.\n  //\n  //     var object = {};\n  //     _.extend(object, Backbone.Events);\n  //     object.on('expand', function(){ alert('expanded'); });\n  //     object.trigger('expand');\n  //\n  _.Events = {\n\n    // Bind one or more space separated events, `events`, to a `callback`\n    // function. Passing `\"all\"` will bind the callback to all events fired.\n    on: function(events, callback, context) {\n\n      var calls, event, node, tail, list;\n      if (!callback) return this;\n      events = events.split(eventSplitter);\n      calls = this._callbacks || (this._callbacks = {});\n\n      // Create an immutable callback list, allowing traversal during\n      // modification.  The tail is an empty object that will always be used\n      // as the next node.\n      while (event = events.shift()) {\n        list = calls[event];\n        node = list ? list.tail : {};\n        node.next = tail = {};\n        node.context = context;\n        node.callback = callback;\n        calls[event] = {tail: tail, next: list ? list.next : node};\n      }\n\n      return this;\n    },\n\n    // Remove one or many callbacks. If `context` is null, removes all callbacks\n    // with that function. If `callback` is null, removes all callbacks for the\n    // event. If `events` is null, removes all bound callbacks for all events.\n    off: function(events, callback, context) {\n      var event, calls, node, tail, cb, ctx;\n\n      // No events, or removing *all* events.\n      if (!(calls = this._callbacks)) return;\n      if (!(events || callback || context)) {\n        delete this._callbacks;\n        return this;\n      }\n\n      // Loop through the listed events and contexts, splicing them out of the\n      // linked list of callbacks if appropriate.\n      events = events ? events.split(eventSplitter) : _.keys(calls);\n      while (event = events.shift()) {\n        node = calls[event];\n        delete calls[event];\n        if (!node || !(callback || context)) continue;\n        // Create a new list, omitting the indicated callbacks.\n        tail = node.tail;\n        while ((node = node.next) !== tail) {\n          cb = node.callback;\n          ctx = node.context;\n          if ((callback && cb !== callback) || (context && ctx !== context)) {\n            this.on(event, cb, ctx);\n          }\n        }\n      }\n\n      return this;\n    },\n\n    // Trigger one or many events, firing all bound callbacks. Callbacks are\n    // passed the same arguments as `trigger` is, apart from the event name\n    // (unless you're listening on `\"all\"`, which will cause your callback to\n    // receive the true name of the event as the first argument).\n    trigger: function(events) {\n      var event, node, calls, tail, args, all, rest;\n      if (!(calls = this._callbacks)) return this;\n      all = calls.all;\n      events = events.split(eventSplitter);\n      rest = slice.call(arguments, 1);\n\n      // For each event, walk through the linked list of callbacks twice,\n      // first to trigger the event, then to trigger any `\"all\"` callbacks.\n      while (event = events.shift()) {\n        if (node = calls[event]) {\n          tail = node.tail;\n          while ((node = node.next) !== tail) {\n            node.callback.apply(node.context || this, rest);\n          }\n        }\n        if (node = all) {\n          tail = node.tail;\n          args = [event].concat(rest);\n          while ((node = node.next) !== tail) {\n            node.callback.apply(node.context || this, args);\n          }\n        }\n      }\n\n      return this;\n    }\n\n  };\n\n  // Aliases for backwards compatibility.\n  _.Events.bind   = _.Events.on;\n  _.Events.unbind = _.Events.off;\n\n\n\n  // Data.Query\n  // --------------\n\n  // Query module to be mixed into Data.Graph and Data.Collection data structures\n  // No indexing yet, this has been shifted to Data.js 0.7.0\n\n  Data.Query = {\n\n    // Returns all objects matching a particular query object\n    query: function(qry) {\n      function toArray(v) {\n        return _.isArray(v) ? v : [v];\n      }\n\n      function match(obj, qry) {\n        var matched = true;\n\n        _.find(qry, function(value, property) {\n          var val = property === \"type\" ? obj.types : obj.properties[property];\n          if (property === \"_id\") val = obj._id;\n          var matchedValues = _.intersect(toArray(value), toArray(val));\n          if (matchedValues.length === 0) {\n            matched = false;\n            return true;\n          }\n        });\n        return matched;\n      }\n\n      var type = this.get(qry.type);\n      var objects = _.select(this.objects, function(o) {\n        return match(o, qry);\n      });\n      return Data.Collection.create(type, objects);\n    }\n  };\n\n  \n  // Data.Type\n  // --------------\n  \n  // A `Data.Type` denotes an IS A relationship about a `Data.Object`. \n  // For example, if you type the object 'Shakespear' with the type 'Person'\n  // you are saying that Shakespeare IS A person. Types are also used to hold\n  // collections of properties that belong to a certain group of objects.\n  \n\n  Data.Type = function(type) {\n      this._id = type._id;\n      this.type = \"/type/type\";\n      this.name = type.name;\n      this.meta = type.meta || {};\n\n      this.indexes = type.indexes || {};\n\n      this.properties = type.properties;\n      _.each(this.properties, _.bind(function(property, key) {\n        property.type = _.isArray(property.type) ? property.type : [ property.type ];\n        property.unique = _.isBoolean(property.unique) ? property.unique : true;\n      }, this));\n  };\n\n  _.extend(Data.Type.prototype, _.Events, {\n\n    // Serialize a single type node\n    toJSON: function() {\n      return {\n        _id: this._id,\n        type: '/type/type',\n        properties: this.properties,\n        meta: this.meta,\n        indexes: _.map(this.indexes, function(i) { return i.properties })\n      }\n    }\n  });\n  \n\n  // Data.Object\n  // --------------\n  \n  // Represents a typed data object within a `Data.Graph`.\n  // Provides access to properties, defined on the corresponding `Data.Type`.\n\n  Data.Object = function(object, host) {\n    this._id = object._id;\n    this.host = host;\n    this.properties = {};\n    this.set(object);\n  };\n\n  _.extend(Data.Object.prototype, _.Events, {\n\n    // Returns the most specific type\n    type: function() {\n      return this.host.get(_.last(this.types));\n    },\n\n    // Property lookup according to the type chain\n    property: function(property) {\n      var p = null;\n      _.find(_.clone(this.types).reverse(), _.bind(function(type) {\n        return p = this.host.get(type).properties[property];\n      }, this));\n      return p;\n    },\n\n    \n    // There are four different access scenarios for getting a certain property\n    // \n    // * Unique value types\n    // * Non-unique value types\n    // * Unique object types \n    // * Non-Unique object types \n    // \n    // For convenience there's a get method, which always returns the right\n    // result depending on the schema information. However, internally, every\n    // property of a resource is represented as a non-unique `Data.Hash` \n    // of `Data.Node` objects, even if it's a unique property. So if you want \n    // to be explicit you should use the native methods of `Data.Node`. If\n    // two arguments are provided `get` delegates to `Data.Node#get`.\n    \n    get: function(property, key) {\n      var p = this.property(property),\n          value = this.properties[property];\n\n      if (!p || value === undefined) return null;\n\n      if (Data.isValueType(p.type)) {\n        return value;\n      } else {\n        return p.unique ? this.host.get(value)\n                        : _.map(value, _.bind(function(v) { return this.host.get(v); }, this));   \n      }\n    },\n\n    // Sets properties on the object\n    // Existing properties are overridden / replaced\n    set: function(object) {\n      var that = this;\n      \n      if (object.type) this.types = _.isArray(object.type) ? object.type : [object.type];\n      if (object.meta) this.meta = this.object.meta;\n\n      _.each(object, _.bind(function(value, key) {\n        if (!that.property(key) || key === \"type\") return;\n        that.properties[key] = value;\n      }, this));\n    },\n\n    // Serialize an `Data.Object`'s properties\n    toJSON: function() {\n      return _.extend(this.properties, {_id: this._id, type: this.types})\n    }\n  });\n    \n  \n  // Data.Graph\n  // --------------\n  \n  // A `Data.Graph` can be used for representing arbitrary complex object\n  // graphs. Relations between objects are expressed through links that\n  // point to referred objects. Data.Graphs can be traversed in various ways.\n  // See the testsuite for usage.\n  \n  Data.Graph = function(graph, options) {\n    this.nodes = [];\n    this.objects = [];\n    this.types = [];\n    this.keys = {}; // Lookup objects by key\n    if (!graph) return;\n    this.merge(graph);\n  };\n\n _.extend(Data.Graph.prototype, Data.Query, _.Events, {\n    \n    // Merges in another Graph\n    merge: function(nodes) {      \n      _.each(nodes, _.bind(function(n, key) { this.set(_.extend(n, { _id: key })); }, this));\n      return this;\n    },\n\n    // API method for accessing objects in the graph space\n    get: function(id) {\n      return this.nodes[this.keys[id]];\n    },\n\n    set: function(node) {\n      var types = _.isArray(node.type) ? node.type : [node.type];\n      node._id = node._id ? node._id : Data.uuid('/' + _.last(_.last(types).split('/')) + '/');\n\n      function createNode() {\n        return _.last(types) === \"/type/type\" ? new Data.Type(node)\n                                              : new Data.Object(node, this);\n      }\n\n      var n = this.get(node._id);\n      if (!n) {\n        n = createNode.apply(this);\n        this.keys[node._id] = this.nodes.length;\n        this.nodes.push(n);\n        \n        // Register\n        if (_.last(types) === \"/type/type\") {\n          this.types.push(n);\n        } else {\n          this.objects.push(n);\n        }\n      } else {\n        n.set(node);\n      }\n      return n;\n    },\n\n    // Return all objects matching a query object\n    find: function(qry) {\n      return this.query(qry);\n    },\n    \n    // Delete node by id, referenced nodes remain untouched\n    del: function(id) {\n      var node = this.get(id);\n      if (!node) return;\n      node._deleted = true;\n    },\n\n    // Serializes the graph to the JSON-based exchange format\n    toJSON: function(extended) {\n      var result = {};\n      _.each(this.nodes, function(n) {\n        result[n._id] = n.toJSON()\n      });\n      return result;\n    }\n  });\n\n\n  // Data.Collection\n  // --------------\n  \n  // A Collection is a simple data abstraction format where a dataset under\n  // investigation conforms to a collection of data items that describes all\n  // facets of the underlying data in a simple and universal way. You can\n  // think of a Collection as a table of data, except it provides precise\n  // information about the data contained (meta-data).\n  \n  Data.Collection = function(spec) {\n    this.type = new Data.Type(spec.type, this);\n    this.objects = [];\n    this.length = 0;\n    this.keys = {};\n\n    _.each(spec.objects, _.bind(function(obj) {\n      this.add(obj);\n    }, this));\n  };\n\n  // Creates a Data.Collection using a Data.Type, and an array of Data.Objects\n  Data.Collection.create = function(type, objects) {\n    var c = new Data.Collection({type: type, objects: []});\n    c.objects = objects;\n    c.length = objects.length;\n\n    // Register keys for fast lookup\n    _.each(objects, function(o, i) {\n      c.keys[o._id] = i;\n    });\n    return c;\n  };\n  \n  _.extend(Data.Collection.prototype, _.Events, Data.Query, {\n\n    // Get an object (item) from the collection\n    get: function(id) {\n      if (id.match('^/type/')) return this.type;\n      return this.objects[this.keys[id]];\n    },\n\n    // Return object at a given index\n    at: function(index) {\n      return this.objects[index];\n    },\n\n    // Return index for a given key\n    index: function(key) {\n      return this.keys[key];\n    },\n\n    // Return key for a given index\n    key: function(index) {\n      return this.objects[index]._id;\n    },\n    \n    // Add a new object to the collection\n    add: function(obj) {\n      var o;\n      if (obj instanceof Data.Object) {\n        o = obj;\n        this.keys[o._id] = this.objects.length;\n        this.objects.push(o);\n        this.length = this.objects.length;\n      } else {\n        obj._id = obj._id ? obj._id : Data.uuid('/' + _.last(this.type._id.split('/')) + '/');\n        obj.type = this.type._id;\n\n        o = this.get(obj._id);  \n        if (!o) {\n          o = new Data.Object(obj, this);\n          this.keys[o._id] = this.objects.length;\n          this.objects.push(o);\n          this.length = this.objects.length;\n        } else {\n          o.set(obj);\n        }\n      }\n      return o;\n    },\n    \n    // Find objects that match a particular query\n    find: function(qry) {\n      qry[\"type\"] = this.type._id;\n      return this.query(qry);\n    },\n\n    // Iterate over all objects in the collection\n    each: function (fn) {\n      _.each(this.objects, function(object, i) {\n        fn.call(this, object, object._id, i);\n      }, this);\n      return this;\n    },\n\n    // Returns the first item\n    first: function() {\n      return this.length > 0 ? this.objects[0] : null;\n    },\n\n    // Returns the last item\n    last: function() {\n      return this.length > 0 ? this.objects[this.length-1] : null;\n    },\n\n    // Returns a sub-range of the collection\n    range: function(start, end) {\n      var result = Data.Collection.create(this.type, []);\n      for(var i=start; i<=end && i<this.objects.length; i++) {\n        result.add(this.at(i));\n      }\n      return result;\n    },\n\n    // Performs an intersection with the given *collection*\n    intersect: function(collection) {\n      var that = this,\n          result = new Data.Collection.create(this.type, []);\n      \n      // Find out which collection is smaller\n      var smaller, other;\n      if (collection.length < that.length) {\n        smaller = collection;\n        other = that;\n      } else {\n        smaller = that;\n        other = collection;\n      }\n\n      _.each(smaller.objects, function (object, index) {\n        if (other.get(object._id)) {\n          result.add(collection.get(object._id));\n        }\n      });\n      return result;\n    },\n    \n    // Performs an union with the given *hash*\n    union: function(collection) {\n      var that = this,\n          result = new Data.Collection.create(this.type, []);\n          \n      this.each(function(value, key) {\n        result.add(value);\n      });\n      collection.each(function(value, key) {\n        if (!result.get(key)) result.add(value);\n      });\n      return result;\n    },\n    \n    // Computes the difference between the current *collection* and a given *collection*\n    difference: function(collection) {\n      var that = this;\n          result = new Data.Collection.create(this.type, []);\n      this.each(function(value, key) {\n        if (!collection.get(key)) result.add(value);\n      });\n      return result;\n    },\n    \n    // Serialize\n    toJSON: function() {\n      return {\n        type: this.type.toJSON(),\n        objects: _.map(this.objects, function(n) { return n.toJSON(); })\n      };\n    }\n  });\n})();"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/data/data.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/data/data.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/data/data.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/data/data.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/data/data.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/data/data.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/data/data.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/data/data.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/data/data.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/data/data.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/data/data.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/data/data.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/data/data.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/data/data.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/data/data.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/data/data.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/data/data.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/data/data.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/data/data.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/data/data.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/data/data.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/data/data.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/data/data.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/data/data.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/data/data.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/data/data.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/data/data.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/data/data.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/data/data.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/data/data.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/data/data.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/data/data.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/data/data.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/data/data.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/data/data.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/data/data.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/data/data.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/data/data.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/data/data.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/data/data.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/data/data.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/data/data.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/data/data.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/data/data.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/data/data.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/data/data.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/data/data.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/data/data.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/data/data.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/data/data.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/data/data.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/data/data.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/data/data.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/data/data.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/data/data.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/data/data.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/data/data.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/data/data.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/data/data.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/data/data.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/data/data.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/data/data.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/data/data.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/data/data.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/data/data.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/data/data.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/data/data.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/data/data.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/data/data.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/data/data.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/data/data.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/data/data.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/data/data.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/data/data.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/data/data.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/data/data.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/data/data.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/data/data.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/data/data.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/data/data.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/data/data.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/data/data.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/data/data.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/data/data.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/data/data.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/data/data.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/data/data.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/data/data.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/data/data.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/data/data.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/data/data.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/data/data.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/data/data.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/data/data.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/data/data.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/data/data.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/data/data.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/data/data.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/data/data.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/data/data.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/data/data.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/data/data.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/data/data.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/data/data.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/data/data.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/data/data.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/data/data.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/data/data.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/data/data.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/data/data.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/data/data.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/data/data.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/data/data.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/data/data.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/data/data.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/data/data.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/data/data.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/data/data.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/data/data.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/data/data.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/data/data.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/data/data.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/data/data.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/data/data.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/data/data.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/data/data.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/data/data.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/data/data.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/data/data.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/data/data.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/data/data.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/data/data.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/data/data.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/data/data.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/data/data.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/data/data.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/data/data.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/data/data.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/data/data.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/data/data.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/data/data.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/data/data.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/data/data.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/data/data.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/data/data.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/data/data.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/data/data.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/data/data.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/data/data.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/data/data.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/data/data.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/data/data.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/data/data.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/data/data.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/data/data.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/data/data.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/data/data.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/data/data.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/data/data.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/data/data.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/data/data.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/data/data.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/data/data.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/data/data.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/data/data.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/data/data.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/data/data.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/data/data.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/data/data.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/data/data.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/data/data.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/data/data.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules/data/data.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules/data/data.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules/data/data.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules/data/data.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules/data/data.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules/data/data.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules/data/data.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules/data/data.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules/data/data.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules/data/data.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules/data/data.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"node_modules/data/data.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"node_modules/data/data.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"node_modules/data/data.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"node_modules/data/data.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"node_modules/data/data.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"node_modules/data/data.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"node_modules/data/data.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"node_modules/data/data.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"node_modules/data/data.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"node_modules/data/data.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"node_modules/data/data.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"node_modules/data/data.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"node_modules/data/data.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"node_modules/data/data.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"node_modules/data/data.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"node_modules/data/data.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"node_modules/data/data.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"node_modules/data/data.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"node_modules/data/data.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"node_modules/data/data.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"node_modules/data/data.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"node_modules/data/data.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"node_modules/data/data.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"node_modules/data/data.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"node_modules/data/data.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"node_modules/data/data.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"node_modules/data/data.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"node_modules/data/data.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"node_modules/data/data.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"node_modules/data/data.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"node_modules/data/data.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"node_modules/data/data.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"node_modules/data/data.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"node_modules/data/data.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"node_modules/data/data.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"node_modules/data/data.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"node_modules/data/data.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"node_modules/data/data.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"node_modules/data/data.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}},{"source":"node_modules/data/data.js","original":{"line":223,"column":0},"generated":{"line":223,"column":0}},{"source":"node_modules/data/data.js","original":{"line":224,"column":0},"generated":{"line":224,"column":0}},{"source":"node_modules/data/data.js","original":{"line":225,"column":0},"generated":{"line":225,"column":0}},{"source":"node_modules/data/data.js","original":{"line":226,"column":0},"generated":{"line":226,"column":0}},{"source":"node_modules/data/data.js","original":{"line":227,"column":0},"generated":{"line":227,"column":0}},{"source":"node_modules/data/data.js","original":{"line":228,"column":0},"generated":{"line":228,"column":0}},{"source":"node_modules/data/data.js","original":{"line":229,"column":0},"generated":{"line":229,"column":0}},{"source":"node_modules/data/data.js","original":{"line":230,"column":0},"generated":{"line":230,"column":0}},{"source":"node_modules/data/data.js","original":{"line":231,"column":0},"generated":{"line":231,"column":0}},{"source":"node_modules/data/data.js","original":{"line":232,"column":0},"generated":{"line":232,"column":0}},{"source":"node_modules/data/data.js","original":{"line":233,"column":0},"generated":{"line":233,"column":0}},{"source":"node_modules/data/data.js","original":{"line":234,"column":0},"generated":{"line":234,"column":0}},{"source":"node_modules/data/data.js","original":{"line":235,"column":0},"generated":{"line":235,"column":0}},{"source":"node_modules/data/data.js","original":{"line":236,"column":0},"generated":{"line":236,"column":0}},{"source":"node_modules/data/data.js","original":{"line":237,"column":0},"generated":{"line":237,"column":0}},{"source":"node_modules/data/data.js","original":{"line":238,"column":0},"generated":{"line":238,"column":0}},{"source":"node_modules/data/data.js","original":{"line":239,"column":0},"generated":{"line":239,"column":0}},{"source":"node_modules/data/data.js","original":{"line":240,"column":0},"generated":{"line":240,"column":0}},{"source":"node_modules/data/data.js","original":{"line":241,"column":0},"generated":{"line":241,"column":0}},{"source":"node_modules/data/data.js","original":{"line":242,"column":0},"generated":{"line":242,"column":0}},{"source":"node_modules/data/data.js","original":{"line":243,"column":0},"generated":{"line":243,"column":0}},{"source":"node_modules/data/data.js","original":{"line":244,"column":0},"generated":{"line":244,"column":0}},{"source":"node_modules/data/data.js","original":{"line":245,"column":0},"generated":{"line":245,"column":0}},{"source":"node_modules/data/data.js","original":{"line":246,"column":0},"generated":{"line":246,"column":0}},{"source":"node_modules/data/data.js","original":{"line":247,"column":0},"generated":{"line":247,"column":0}},{"source":"node_modules/data/data.js","original":{"line":248,"column":0},"generated":{"line":248,"column":0}},{"source":"node_modules/data/data.js","original":{"line":249,"column":0},"generated":{"line":249,"column":0}},{"source":"node_modules/data/data.js","original":{"line":250,"column":0},"generated":{"line":250,"column":0}},{"source":"node_modules/data/data.js","original":{"line":251,"column":0},"generated":{"line":251,"column":0}},{"source":"node_modules/data/data.js","original":{"line":252,"column":0},"generated":{"line":252,"column":0}},{"source":"node_modules/data/data.js","original":{"line":253,"column":0},"generated":{"line":253,"column":0}},{"source":"node_modules/data/data.js","original":{"line":254,"column":0},"generated":{"line":254,"column":0}},{"source":"node_modules/data/data.js","original":{"line":255,"column":0},"generated":{"line":255,"column":0}},{"source":"node_modules/data/data.js","original":{"line":256,"column":0},"generated":{"line":256,"column":0}},{"source":"node_modules/data/data.js","original":{"line":257,"column":0},"generated":{"line":257,"column":0}},{"source":"node_modules/data/data.js","original":{"line":258,"column":0},"generated":{"line":258,"column":0}},{"source":"node_modules/data/data.js","original":{"line":259,"column":0},"generated":{"line":259,"column":0}},{"source":"node_modules/data/data.js","original":{"line":260,"column":0},"generated":{"line":260,"column":0}},{"source":"node_modules/data/data.js","original":{"line":261,"column":0},"generated":{"line":261,"column":0}},{"source":"node_modules/data/data.js","original":{"line":262,"column":0},"generated":{"line":262,"column":0}},{"source":"node_modules/data/data.js","original":{"line":263,"column":0},"generated":{"line":263,"column":0}},{"source":"node_modules/data/data.js","original":{"line":264,"column":0},"generated":{"line":264,"column":0}},{"source":"node_modules/data/data.js","original":{"line":265,"column":0},"generated":{"line":265,"column":0}},{"source":"node_modules/data/data.js","original":{"line":266,"column":0},"generated":{"line":266,"column":0}},{"source":"node_modules/data/data.js","original":{"line":267,"column":0},"generated":{"line":267,"column":0}},{"source":"node_modules/data/data.js","original":{"line":268,"column":0},"generated":{"line":268,"column":0}},{"source":"node_modules/data/data.js","original":{"line":269,"column":0},"generated":{"line":269,"column":0}},{"source":"node_modules/data/data.js","original":{"line":270,"column":0},"generated":{"line":270,"column":0}},{"source":"node_modules/data/data.js","original":{"line":271,"column":0},"generated":{"line":271,"column":0}},{"source":"node_modules/data/data.js","original":{"line":272,"column":0},"generated":{"line":272,"column":0}},{"source":"node_modules/data/data.js","original":{"line":273,"column":0},"generated":{"line":273,"column":0}},{"source":"node_modules/data/data.js","original":{"line":274,"column":0},"generated":{"line":274,"column":0}},{"source":"node_modules/data/data.js","original":{"line":275,"column":0},"generated":{"line":275,"column":0}},{"source":"node_modules/data/data.js","original":{"line":276,"column":0},"generated":{"line":276,"column":0}},{"source":"node_modules/data/data.js","original":{"line":277,"column":0},"generated":{"line":277,"column":0}},{"source":"node_modules/data/data.js","original":{"line":278,"column":0},"generated":{"line":278,"column":0}},{"source":"node_modules/data/data.js","original":{"line":279,"column":0},"generated":{"line":279,"column":0}},{"source":"node_modules/data/data.js","original":{"line":280,"column":0},"generated":{"line":280,"column":0}},{"source":"node_modules/data/data.js","original":{"line":281,"column":0},"generated":{"line":281,"column":0}},{"source":"node_modules/data/data.js","original":{"line":282,"column":0},"generated":{"line":282,"column":0}},{"source":"node_modules/data/data.js","original":{"line":283,"column":0},"generated":{"line":283,"column":0}},{"source":"node_modules/data/data.js","original":{"line":284,"column":0},"generated":{"line":284,"column":0}},{"source":"node_modules/data/data.js","original":{"line":285,"column":0},"generated":{"line":285,"column":0}},{"source":"node_modules/data/data.js","original":{"line":286,"column":0},"generated":{"line":286,"column":0}},{"source":"node_modules/data/data.js","original":{"line":287,"column":0},"generated":{"line":287,"column":0}},{"source":"node_modules/data/data.js","original":{"line":288,"column":0},"generated":{"line":288,"column":0}},{"source":"node_modules/data/data.js","original":{"line":289,"column":0},"generated":{"line":289,"column":0}},{"source":"node_modules/data/data.js","original":{"line":290,"column":0},"generated":{"line":290,"column":0}},{"source":"node_modules/data/data.js","original":{"line":291,"column":0},"generated":{"line":291,"column":0}},{"source":"node_modules/data/data.js","original":{"line":292,"column":0},"generated":{"line":292,"column":0}},{"source":"node_modules/data/data.js","original":{"line":293,"column":0},"generated":{"line":293,"column":0}},{"source":"node_modules/data/data.js","original":{"line":294,"column":0},"generated":{"line":294,"column":0}},{"source":"node_modules/data/data.js","original":{"line":295,"column":0},"generated":{"line":295,"column":0}},{"source":"node_modules/data/data.js","original":{"line":296,"column":0},"generated":{"line":296,"column":0}},{"source":"node_modules/data/data.js","original":{"line":297,"column":0},"generated":{"line":297,"column":0}},{"source":"node_modules/data/data.js","original":{"line":298,"column":0},"generated":{"line":298,"column":0}},{"source":"node_modules/data/data.js","original":{"line":299,"column":0},"generated":{"line":299,"column":0}},{"source":"node_modules/data/data.js","original":{"line":300,"column":0},"generated":{"line":300,"column":0}},{"source":"node_modules/data/data.js","original":{"line":301,"column":0},"generated":{"line":301,"column":0}},{"source":"node_modules/data/data.js","original":{"line":302,"column":0},"generated":{"line":302,"column":0}},{"source":"node_modules/data/data.js","original":{"line":303,"column":0},"generated":{"line":303,"column":0}},{"source":"node_modules/data/data.js","original":{"line":304,"column":0},"generated":{"line":304,"column":0}},{"source":"node_modules/data/data.js","original":{"line":305,"column":0},"generated":{"line":305,"column":0}},{"source":"node_modules/data/data.js","original":{"line":306,"column":0},"generated":{"line":306,"column":0}},{"source":"node_modules/data/data.js","original":{"line":307,"column":0},"generated":{"line":307,"column":0}},{"source":"node_modules/data/data.js","original":{"line":308,"column":0},"generated":{"line":308,"column":0}},{"source":"node_modules/data/data.js","original":{"line":309,"column":0},"generated":{"line":309,"column":0}},{"source":"node_modules/data/data.js","original":{"line":310,"column":0},"generated":{"line":310,"column":0}},{"source":"node_modules/data/data.js","original":{"line":311,"column":0},"generated":{"line":311,"column":0}},{"source":"node_modules/data/data.js","original":{"line":312,"column":0},"generated":{"line":312,"column":0}},{"source":"node_modules/data/data.js","original":{"line":313,"column":0},"generated":{"line":313,"column":0}},{"source":"node_modules/data/data.js","original":{"line":314,"column":0},"generated":{"line":314,"column":0}},{"source":"node_modules/data/data.js","original":{"line":315,"column":0},"generated":{"line":315,"column":0}},{"source":"node_modules/data/data.js","original":{"line":316,"column":0},"generated":{"line":316,"column":0}},{"source":"node_modules/data/data.js","original":{"line":317,"column":0},"generated":{"line":317,"column":0}},{"source":"node_modules/data/data.js","original":{"line":318,"column":0},"generated":{"line":318,"column":0}},{"source":"node_modules/data/data.js","original":{"line":319,"column":0},"generated":{"line":319,"column":0}},{"source":"node_modules/data/data.js","original":{"line":320,"column":0},"generated":{"line":320,"column":0}},{"source":"node_modules/data/data.js","original":{"line":321,"column":0},"generated":{"line":321,"column":0}},{"source":"node_modules/data/data.js","original":{"line":322,"column":0},"generated":{"line":322,"column":0}},{"source":"node_modules/data/data.js","original":{"line":323,"column":0},"generated":{"line":323,"column":0}},{"source":"node_modules/data/data.js","original":{"line":324,"column":0},"generated":{"line":324,"column":0}},{"source":"node_modules/data/data.js","original":{"line":325,"column":0},"generated":{"line":325,"column":0}},{"source":"node_modules/data/data.js","original":{"line":326,"column":0},"generated":{"line":326,"column":0}},{"source":"node_modules/data/data.js","original":{"line":327,"column":0},"generated":{"line":327,"column":0}},{"source":"node_modules/data/data.js","original":{"line":328,"column":0},"generated":{"line":328,"column":0}},{"source":"node_modules/data/data.js","original":{"line":329,"column":0},"generated":{"line":329,"column":0}},{"source":"node_modules/data/data.js","original":{"line":330,"column":0},"generated":{"line":330,"column":0}},{"source":"node_modules/data/data.js","original":{"line":331,"column":0},"generated":{"line":331,"column":0}},{"source":"node_modules/data/data.js","original":{"line":332,"column":0},"generated":{"line":332,"column":0}},{"source":"node_modules/data/data.js","original":{"line":333,"column":0},"generated":{"line":333,"column":0}},{"source":"node_modules/data/data.js","original":{"line":334,"column":0},"generated":{"line":334,"column":0}},{"source":"node_modules/data/data.js","original":{"line":335,"column":0},"generated":{"line":335,"column":0}},{"source":"node_modules/data/data.js","original":{"line":336,"column":0},"generated":{"line":336,"column":0}},{"source":"node_modules/data/data.js","original":{"line":337,"column":0},"generated":{"line":337,"column":0}},{"source":"node_modules/data/data.js","original":{"line":338,"column":0},"generated":{"line":338,"column":0}},{"source":"node_modules/data/data.js","original":{"line":339,"column":0},"generated":{"line":339,"column":0}},{"source":"node_modules/data/data.js","original":{"line":340,"column":0},"generated":{"line":340,"column":0}},{"source":"node_modules/data/data.js","original":{"line":341,"column":0},"generated":{"line":341,"column":0}},{"source":"node_modules/data/data.js","original":{"line":342,"column":0},"generated":{"line":342,"column":0}},{"source":"node_modules/data/data.js","original":{"line":343,"column":0},"generated":{"line":343,"column":0}},{"source":"node_modules/data/data.js","original":{"line":344,"column":0},"generated":{"line":344,"column":0}},{"source":"node_modules/data/data.js","original":{"line":345,"column":0},"generated":{"line":345,"column":0}},{"source":"node_modules/data/data.js","original":{"line":346,"column":0},"generated":{"line":346,"column":0}},{"source":"node_modules/data/data.js","original":{"line":347,"column":0},"generated":{"line":347,"column":0}},{"source":"node_modules/data/data.js","original":{"line":348,"column":0},"generated":{"line":348,"column":0}},{"source":"node_modules/data/data.js","original":{"line":349,"column":0},"generated":{"line":349,"column":0}},{"source":"node_modules/data/data.js","original":{"line":350,"column":0},"generated":{"line":350,"column":0}},{"source":"node_modules/data/data.js","original":{"line":351,"column":0},"generated":{"line":351,"column":0}},{"source":"node_modules/data/data.js","original":{"line":352,"column":0},"generated":{"line":352,"column":0}},{"source":"node_modules/data/data.js","original":{"line":353,"column":0},"generated":{"line":353,"column":0}},{"source":"node_modules/data/data.js","original":{"line":354,"column":0},"generated":{"line":354,"column":0}},{"source":"node_modules/data/data.js","original":{"line":355,"column":0},"generated":{"line":355,"column":0}},{"source":"node_modules/data/data.js","original":{"line":356,"column":0},"generated":{"line":356,"column":0}},{"source":"node_modules/data/data.js","original":{"line":357,"column":0},"generated":{"line":357,"column":0}},{"source":"node_modules/data/data.js","original":{"line":358,"column":0},"generated":{"line":358,"column":0}},{"source":"node_modules/data/data.js","original":{"line":359,"column":0},"generated":{"line":359,"column":0}},{"source":"node_modules/data/data.js","original":{"line":360,"column":0},"generated":{"line":360,"column":0}},{"source":"node_modules/data/data.js","original":{"line":361,"column":0},"generated":{"line":361,"column":0}},{"source":"node_modules/data/data.js","original":{"line":362,"column":0},"generated":{"line":362,"column":0}},{"source":"node_modules/data/data.js","original":{"line":363,"column":0},"generated":{"line":363,"column":0}},{"source":"node_modules/data/data.js","original":{"line":364,"column":0},"generated":{"line":364,"column":0}},{"source":"node_modules/data/data.js","original":{"line":365,"column":0},"generated":{"line":365,"column":0}},{"source":"node_modules/data/data.js","original":{"line":366,"column":0},"generated":{"line":366,"column":0}},{"source":"node_modules/data/data.js","original":{"line":367,"column":0},"generated":{"line":367,"column":0}},{"source":"node_modules/data/data.js","original":{"line":368,"column":0},"generated":{"line":368,"column":0}},{"source":"node_modules/data/data.js","original":{"line":369,"column":0},"generated":{"line":369,"column":0}},{"source":"node_modules/data/data.js","original":{"line":370,"column":0},"generated":{"line":370,"column":0}},{"source":"node_modules/data/data.js","original":{"line":371,"column":0},"generated":{"line":371,"column":0}},{"source":"node_modules/data/data.js","original":{"line":372,"column":0},"generated":{"line":372,"column":0}},{"source":"node_modules/data/data.js","original":{"line":373,"column":0},"generated":{"line":373,"column":0}},{"source":"node_modules/data/data.js","original":{"line":374,"column":0},"generated":{"line":374,"column":0}},{"source":"node_modules/data/data.js","original":{"line":375,"column":0},"generated":{"line":375,"column":0}},{"source":"node_modules/data/data.js","original":{"line":376,"column":0},"generated":{"line":376,"column":0}},{"source":"node_modules/data/data.js","original":{"line":377,"column":0},"generated":{"line":377,"column":0}},{"source":"node_modules/data/data.js","original":{"line":378,"column":0},"generated":{"line":378,"column":0}},{"source":"node_modules/data/data.js","original":{"line":379,"column":0},"generated":{"line":379,"column":0}},{"source":"node_modules/data/data.js","original":{"line":380,"column":0},"generated":{"line":380,"column":0}},{"source":"node_modules/data/data.js","original":{"line":381,"column":0},"generated":{"line":381,"column":0}},{"source":"node_modules/data/data.js","original":{"line":382,"column":0},"generated":{"line":382,"column":0}},{"source":"node_modules/data/data.js","original":{"line":383,"column":0},"generated":{"line":383,"column":0}},{"source":"node_modules/data/data.js","original":{"line":384,"column":0},"generated":{"line":384,"column":0}},{"source":"node_modules/data/data.js","original":{"line":385,"column":0},"generated":{"line":385,"column":0}},{"source":"node_modules/data/data.js","original":{"line":386,"column":0},"generated":{"line":386,"column":0}},{"source":"node_modules/data/data.js","original":{"line":387,"column":0},"generated":{"line":387,"column":0}},{"source":"node_modules/data/data.js","original":{"line":388,"column":0},"generated":{"line":388,"column":0}},{"source":"node_modules/data/data.js","original":{"line":389,"column":0},"generated":{"line":389,"column":0}},{"source":"node_modules/data/data.js","original":{"line":390,"column":0},"generated":{"line":390,"column":0}},{"source":"node_modules/data/data.js","original":{"line":391,"column":0},"generated":{"line":391,"column":0}},{"source":"node_modules/data/data.js","original":{"line":392,"column":0},"generated":{"line":392,"column":0}},{"source":"node_modules/data/data.js","original":{"line":393,"column":0},"generated":{"line":393,"column":0}},{"source":"node_modules/data/data.js","original":{"line":394,"column":0},"generated":{"line":394,"column":0}},{"source":"node_modules/data/data.js","original":{"line":395,"column":0},"generated":{"line":395,"column":0}},{"source":"node_modules/data/data.js","original":{"line":396,"column":0},"generated":{"line":396,"column":0}},{"source":"node_modules/data/data.js","original":{"line":397,"column":0},"generated":{"line":397,"column":0}},{"source":"node_modules/data/data.js","original":{"line":398,"column":0},"generated":{"line":398,"column":0}},{"source":"node_modules/data/data.js","original":{"line":399,"column":0},"generated":{"line":399,"column":0}},{"source":"node_modules/data/data.js","original":{"line":400,"column":0},"generated":{"line":400,"column":0}},{"source":"node_modules/data/data.js","original":{"line":401,"column":0},"generated":{"line":401,"column":0}},{"source":"node_modules/data/data.js","original":{"line":402,"column":0},"generated":{"line":402,"column":0}},{"source":"node_modules/data/data.js","original":{"line":403,"column":0},"generated":{"line":403,"column":0}},{"source":"node_modules/data/data.js","original":{"line":404,"column":0},"generated":{"line":404,"column":0}},{"source":"node_modules/data/data.js","original":{"line":405,"column":0},"generated":{"line":405,"column":0}},{"source":"node_modules/data/data.js","original":{"line":406,"column":0},"generated":{"line":406,"column":0}},{"source":"node_modules/data/data.js","original":{"line":407,"column":0},"generated":{"line":407,"column":0}},{"source":"node_modules/data/data.js","original":{"line":408,"column":0},"generated":{"line":408,"column":0}},{"source":"node_modules/data/data.js","original":{"line":409,"column":0},"generated":{"line":409,"column":0}},{"source":"node_modules/data/data.js","original":{"line":410,"column":0},"generated":{"line":410,"column":0}},{"source":"node_modules/data/data.js","original":{"line":411,"column":0},"generated":{"line":411,"column":0}},{"source":"node_modules/data/data.js","original":{"line":412,"column":0},"generated":{"line":412,"column":0}},{"source":"node_modules/data/data.js","original":{"line":413,"column":0},"generated":{"line":413,"column":0}},{"source":"node_modules/data/data.js","original":{"line":414,"column":0},"generated":{"line":414,"column":0}},{"source":"node_modules/data/data.js","original":{"line":415,"column":0},"generated":{"line":415,"column":0}},{"source":"node_modules/data/data.js","original":{"line":416,"column":0},"generated":{"line":416,"column":0}},{"source":"node_modules/data/data.js","original":{"line":417,"column":0},"generated":{"line":417,"column":0}},{"source":"node_modules/data/data.js","original":{"line":418,"column":0},"generated":{"line":418,"column":0}},{"source":"node_modules/data/data.js","original":{"line":419,"column":0},"generated":{"line":419,"column":0}},{"source":"node_modules/data/data.js","original":{"line":420,"column":0},"generated":{"line":420,"column":0}},{"source":"node_modules/data/data.js","original":{"line":421,"column":0},"generated":{"line":421,"column":0}},{"source":"node_modules/data/data.js","original":{"line":422,"column":0},"generated":{"line":422,"column":0}},{"source":"node_modules/data/data.js","original":{"line":423,"column":0},"generated":{"line":423,"column":0}},{"source":"node_modules/data/data.js","original":{"line":424,"column":0},"generated":{"line":424,"column":0}},{"source":"node_modules/data/data.js","original":{"line":425,"column":0},"generated":{"line":425,"column":0}},{"source":"node_modules/data/data.js","original":{"line":426,"column":0},"generated":{"line":426,"column":0}},{"source":"node_modules/data/data.js","original":{"line":427,"column":0},"generated":{"line":427,"column":0}},{"source":"node_modules/data/data.js","original":{"line":428,"column":0},"generated":{"line":428,"column":0}},{"source":"node_modules/data/data.js","original":{"line":429,"column":0},"generated":{"line":429,"column":0}},{"source":"node_modules/data/data.js","original":{"line":430,"column":0},"generated":{"line":430,"column":0}},{"source":"node_modules/data/data.js","original":{"line":431,"column":0},"generated":{"line":431,"column":0}},{"source":"node_modules/data/data.js","original":{"line":432,"column":0},"generated":{"line":432,"column":0}},{"source":"node_modules/data/data.js","original":{"line":433,"column":0},"generated":{"line":433,"column":0}},{"source":"node_modules/data/data.js","original":{"line":434,"column":0},"generated":{"line":434,"column":0}},{"source":"node_modules/data/data.js","original":{"line":435,"column":0},"generated":{"line":435,"column":0}},{"source":"node_modules/data/data.js","original":{"line":436,"column":0},"generated":{"line":436,"column":0}},{"source":"node_modules/data/data.js","original":{"line":437,"column":0},"generated":{"line":437,"column":0}},{"source":"node_modules/data/data.js","original":{"line":438,"column":0},"generated":{"line":438,"column":0}},{"source":"node_modules/data/data.js","original":{"line":439,"column":0},"generated":{"line":439,"column":0}},{"source":"node_modules/data/data.js","original":{"line":440,"column":0},"generated":{"line":440,"column":0}},{"source":"node_modules/data/data.js","original":{"line":441,"column":0},"generated":{"line":441,"column":0}},{"source":"node_modules/data/data.js","original":{"line":442,"column":0},"generated":{"line":442,"column":0}},{"source":"node_modules/data/data.js","original":{"line":443,"column":0},"generated":{"line":443,"column":0}},{"source":"node_modules/data/data.js","original":{"line":444,"column":0},"generated":{"line":444,"column":0}},{"source":"node_modules/data/data.js","original":{"line":445,"column":0},"generated":{"line":445,"column":0}},{"source":"node_modules/data/data.js","original":{"line":446,"column":0},"generated":{"line":446,"column":0}},{"source":"node_modules/data/data.js","original":{"line":447,"column":0},"generated":{"line":447,"column":0}},{"source":"node_modules/data/data.js","original":{"line":448,"column":0},"generated":{"line":448,"column":0}},{"source":"node_modules/data/data.js","original":{"line":449,"column":0},"generated":{"line":449,"column":0}},{"source":"node_modules/data/data.js","original":{"line":450,"column":0},"generated":{"line":450,"column":0}},{"source":"node_modules/data/data.js","original":{"line":451,"column":0},"generated":{"line":451,"column":0}},{"source":"node_modules/data/data.js","original":{"line":452,"column":0},"generated":{"line":452,"column":0}},{"source":"node_modules/data/data.js","original":{"line":453,"column":0},"generated":{"line":453,"column":0}},{"source":"node_modules/data/data.js","original":{"line":454,"column":0},"generated":{"line":454,"column":0}},{"source":"node_modules/data/data.js","original":{"line":455,"column":0},"generated":{"line":455,"column":0}},{"source":"node_modules/data/data.js","original":{"line":456,"column":0},"generated":{"line":456,"column":0}},{"source":"node_modules/data/data.js","original":{"line":457,"column":0},"generated":{"line":457,"column":0}},{"source":"node_modules/data/data.js","original":{"line":458,"column":0},"generated":{"line":458,"column":0}},{"source":"node_modules/data/data.js","original":{"line":459,"column":0},"generated":{"line":459,"column":0}},{"source":"node_modules/data/data.js","original":{"line":460,"column":0},"generated":{"line":460,"column":0}},{"source":"node_modules/data/data.js","original":{"line":461,"column":0},"generated":{"line":461,"column":0}},{"source":"node_modules/data/data.js","original":{"line":462,"column":0},"generated":{"line":462,"column":0}},{"source":"node_modules/data/data.js","original":{"line":463,"column":0},"generated":{"line":463,"column":0}},{"source":"node_modules/data/data.js","original":{"line":464,"column":0},"generated":{"line":464,"column":0}},{"source":"node_modules/data/data.js","original":{"line":465,"column":0},"generated":{"line":465,"column":0}},{"source":"node_modules/data/data.js","original":{"line":466,"column":0},"generated":{"line":466,"column":0}},{"source":"node_modules/data/data.js","original":{"line":467,"column":0},"generated":{"line":467,"column":0}},{"source":"node_modules/data/data.js","original":{"line":468,"column":0},"generated":{"line":468,"column":0}},{"source":"node_modules/data/data.js","original":{"line":469,"column":0},"generated":{"line":469,"column":0}},{"source":"node_modules/data/data.js","original":{"line":470,"column":0},"generated":{"line":470,"column":0}},{"source":"node_modules/data/data.js","original":{"line":471,"column":0},"generated":{"line":471,"column":0}},{"source":"node_modules/data/data.js","original":{"line":472,"column":0},"generated":{"line":472,"column":0}},{"source":"node_modules/data/data.js","original":{"line":473,"column":0},"generated":{"line":473,"column":0}},{"source":"node_modules/data/data.js","original":{"line":474,"column":0},"generated":{"line":474,"column":0}},{"source":"node_modules/data/data.js","original":{"line":475,"column":0},"generated":{"line":475,"column":0}},{"source":"node_modules/data/data.js","original":{"line":476,"column":0},"generated":{"line":476,"column":0}},{"source":"node_modules/data/data.js","original":{"line":477,"column":0},"generated":{"line":477,"column":0}},{"source":"node_modules/data/data.js","original":{"line":478,"column":0},"generated":{"line":478,"column":0}},{"source":"node_modules/data/data.js","original":{"line":479,"column":0},"generated":{"line":479,"column":0}},{"source":"node_modules/data/data.js","original":{"line":480,"column":0},"generated":{"line":480,"column":0}},{"source":"node_modules/data/data.js","original":{"line":481,"column":0},"generated":{"line":481,"column":0}},{"source":"node_modules/data/data.js","original":{"line":482,"column":0},"generated":{"line":482,"column":0}},{"source":"node_modules/data/data.js","original":{"line":483,"column":0},"generated":{"line":483,"column":0}},{"source":"node_modules/data/data.js","original":{"line":484,"column":0},"generated":{"line":484,"column":0}},{"source":"node_modules/data/data.js","original":{"line":485,"column":0},"generated":{"line":485,"column":0}},{"source":"node_modules/data/data.js","original":{"line":486,"column":0},"generated":{"line":486,"column":0}},{"source":"node_modules/data/data.js","original":{"line":487,"column":0},"generated":{"line":487,"column":0}},{"source":"node_modules/data/data.js","original":{"line":488,"column":0},"generated":{"line":488,"column":0}},{"source":"node_modules/data/data.js","original":{"line":489,"column":0},"generated":{"line":489,"column":0}},{"source":"node_modules/data/data.js","original":{"line":490,"column":0},"generated":{"line":490,"column":0}},{"source":"node_modules/data/data.js","original":{"line":491,"column":0},"generated":{"line":491,"column":0}},{"source":"node_modules/data/data.js","original":{"line":492,"column":0},"generated":{"line":492,"column":0}},{"source":"node_modules/data/data.js","original":{"line":493,"column":0},"generated":{"line":493,"column":0}},{"source":"node_modules/data/data.js","original":{"line":494,"column":0},"generated":{"line":494,"column":0}},{"source":"node_modules/data/data.js","original":{"line":495,"column":0},"generated":{"line":495,"column":0}},{"source":"node_modules/data/data.js","original":{"line":496,"column":0},"generated":{"line":496,"column":0}},{"source":"node_modules/data/data.js","original":{"line":497,"column":0},"generated":{"line":497,"column":0}},{"source":"node_modules/data/data.js","original":{"line":498,"column":0},"generated":{"line":498,"column":0}},{"source":"node_modules/data/data.js","original":{"line":499,"column":0},"generated":{"line":499,"column":0}},{"source":"node_modules/data/data.js","original":{"line":500,"column":0},"generated":{"line":500,"column":0}},{"source":"node_modules/data/data.js","original":{"line":501,"column":0},"generated":{"line":501,"column":0}},{"source":"node_modules/data/data.js","original":{"line":502,"column":0},"generated":{"line":502,"column":0}},{"source":"node_modules/data/data.js","original":{"line":503,"column":0},"generated":{"line":503,"column":0}},{"source":"node_modules/data/data.js","original":{"line":504,"column":0},"generated":{"line":504,"column":0}},{"source":"node_modules/data/data.js","original":{"line":505,"column":0},"generated":{"line":505,"column":0}},{"source":"node_modules/data/data.js","original":{"line":506,"column":0},"generated":{"line":506,"column":0}},{"source":"node_modules/data/data.js","original":{"line":507,"column":0},"generated":{"line":507,"column":0}},{"source":"node_modules/data/data.js","original":{"line":508,"column":0},"generated":{"line":508,"column":0}},{"source":"node_modules/data/data.js","original":{"line":509,"column":0},"generated":{"line":509,"column":0}},{"source":"node_modules/data/data.js","original":{"line":510,"column":0},"generated":{"line":510,"column":0}},{"source":"node_modules/data/data.js","original":{"line":511,"column":0},"generated":{"line":511,"column":0}},{"source":"node_modules/data/data.js","original":{"line":512,"column":0},"generated":{"line":512,"column":0}},{"source":"node_modules/data/data.js","original":{"line":513,"column":0},"generated":{"line":513,"column":0}},{"source":"node_modules/data/data.js","original":{"line":514,"column":0},"generated":{"line":514,"column":0}},{"source":"node_modules/data/data.js","original":{"line":515,"column":0},"generated":{"line":515,"column":0}},{"source":"node_modules/data/data.js","original":{"line":516,"column":0},"generated":{"line":516,"column":0}},{"source":"node_modules/data/data.js","original":{"line":517,"column":0},"generated":{"line":517,"column":0}},{"source":"node_modules/data/data.js","original":{"line":518,"column":0},"generated":{"line":518,"column":0}},{"source":"node_modules/data/data.js","original":{"line":519,"column":0},"generated":{"line":519,"column":0}},{"source":"node_modules/data/data.js","original":{"line":520,"column":0},"generated":{"line":520,"column":0}},{"source":"node_modules/data/data.js","original":{"line":521,"column":0},"generated":{"line":521,"column":0}},{"source":"node_modules/data/data.js","original":{"line":522,"column":0},"generated":{"line":522,"column":0}},{"source":"node_modules/data/data.js","original":{"line":523,"column":0},"generated":{"line":523,"column":0}},{"source":"node_modules/data/data.js","original":{"line":524,"column":0},"generated":{"line":524,"column":0}},{"source":"node_modules/data/data.js","original":{"line":525,"column":0},"generated":{"line":525,"column":0}},{"source":"node_modules/data/data.js","original":{"line":526,"column":0},"generated":{"line":526,"column":0}},{"source":"node_modules/data/data.js","original":{"line":527,"column":0},"generated":{"line":527,"column":0}},{"source":"node_modules/data/data.js","original":{"line":528,"column":0},"generated":{"line":528,"column":0}},{"source":"node_modules/data/data.js","original":{"line":529,"column":0},"generated":{"line":529,"column":0}},{"source":"node_modules/data/data.js","original":{"line":530,"column":0},"generated":{"line":530,"column":0}},{"source":"node_modules/data/data.js","original":{"line":531,"column":0},"generated":{"line":531,"column":0}},{"source":"node_modules/data/data.js","original":{"line":532,"column":0},"generated":{"line":532,"column":0}},{"source":"node_modules/data/data.js","original":{"line":533,"column":0},"generated":{"line":533,"column":0}},{"source":"node_modules/data/data.js","original":{"line":534,"column":0},"generated":{"line":534,"column":0}},{"source":"node_modules/data/data.js","original":{"line":535,"column":0},"generated":{"line":535,"column":0}},{"source":"node_modules/data/data.js","original":{"line":536,"column":0},"generated":{"line":536,"column":0}},{"source":"node_modules/data/data.js","original":{"line":537,"column":0},"generated":{"line":537,"column":0}},{"source":"node_modules/data/data.js","original":{"line":538,"column":0},"generated":{"line":538,"column":0}},{"source":"node_modules/data/data.js","original":{"line":539,"column":0},"generated":{"line":539,"column":0}},{"source":"node_modules/data/data.js","original":{"line":540,"column":0},"generated":{"line":540,"column":0}},{"source":"node_modules/data/data.js","original":{"line":541,"column":0},"generated":{"line":541,"column":0}},{"source":"node_modules/data/data.js","original":{"line":542,"column":0},"generated":{"line":542,"column":0}},{"source":"node_modules/data/data.js","original":{"line":543,"column":0},"generated":{"line":543,"column":0}},{"source":"node_modules/data/data.js","original":{"line":544,"column":0},"generated":{"line":544,"column":0}},{"source":"node_modules/data/data.js","original":{"line":545,"column":0},"generated":{"line":545,"column":0}},{"source":"node_modules/data/data.js","original":{"line":546,"column":0},"generated":{"line":546,"column":0}},{"source":"node_modules/data/data.js","original":{"line":547,"column":0},"generated":{"line":547,"column":0}},{"source":"node_modules/data/data.js","original":{"line":548,"column":0},"generated":{"line":548,"column":0}},{"source":"node_modules/data/data.js","original":{"line":549,"column":0},"generated":{"line":549,"column":0}},{"source":"node_modules/data/data.js","original":{"line":550,"column":0},"generated":{"line":550,"column":0}},{"source":"node_modules/data/data.js","original":{"line":551,"column":0},"generated":{"line":551,"column":0}},{"source":"node_modules/data/data.js","original":{"line":552,"column":0},"generated":{"line":552,"column":0}},{"source":"node_modules/data/data.js","original":{"line":553,"column":0},"generated":{"line":553,"column":0}},{"source":"node_modules/data/data.js","original":{"line":554,"column":0},"generated":{"line":554,"column":0}},{"source":"node_modules/data/data.js","original":{"line":555,"column":0},"generated":{"line":555,"column":0}},{"source":"node_modules/data/data.js","original":{"line":556,"column":0},"generated":{"line":556,"column":0}},{"source":"node_modules/data/data.js","original":{"line":557,"column":0},"generated":{"line":557,"column":0}},{"source":"node_modules/data/data.js","original":{"line":558,"column":0},"generated":{"line":558,"column":0}},{"source":"node_modules/data/data.js","original":{"line":559,"column":0},"generated":{"line":559,"column":0}},{"source":"node_modules/data/data.js","original":{"line":560,"column":0},"generated":{"line":560,"column":0}},{"source":"node_modules/data/data.js","original":{"line":561,"column":0},"generated":{"line":561,"column":0}},{"source":"node_modules/data/data.js","original":{"line":562,"column":0},"generated":{"line":562,"column":0}},{"source":"node_modules/data/data.js","original":{"line":563,"column":0},"generated":{"line":563,"column":0}},{"source":"node_modules/data/data.js","original":{"line":564,"column":0},"generated":{"line":564,"column":0}},{"source":"node_modules/data/data.js","original":{"line":565,"column":0},"generated":{"line":565,"column":0}},{"source":"node_modules/data/data.js","original":{"line":566,"column":0},"generated":{"line":566,"column":0}},{"source":"node_modules/data/data.js","original":{"line":567,"column":0},"generated":{"line":567,"column":0}},{"source":"node_modules/data/data.js","original":{"line":568,"column":0},"generated":{"line":568,"column":0}},{"source":"node_modules/data/data.js","original":{"line":569,"column":0},"generated":{"line":569,"column":0}},{"source":"node_modules/data/data.js","original":{"line":570,"column":0},"generated":{"line":570,"column":0}},{"source":"node_modules/data/data.js","original":{"line":571,"column":0},"generated":{"line":571,"column":0}},{"source":"node_modules/data/data.js","original":{"line":572,"column":0},"generated":{"line":572,"column":0}},{"source":"node_modules/data/data.js","original":{"line":573,"column":0},"generated":{"line":573,"column":0}},{"source":"node_modules/data/data.js","original":{"line":574,"column":0},"generated":{"line":574,"column":0}},{"source":"node_modules/data/data.js","original":{"line":575,"column":0},"generated":{"line":575,"column":0}},{"source":"node_modules/data/data.js","original":{"line":576,"column":0},"generated":{"line":576,"column":0}},{"source":"node_modules/data/data.js","original":{"line":577,"column":0},"generated":{"line":577,"column":0}},{"source":"node_modules/data/data.js","original":{"line":578,"column":0},"generated":{"line":578,"column":0}},{"source":"node_modules/data/data.js","original":{"line":579,"column":0},"generated":{"line":579,"column":0}},{"source":"node_modules/data/data.js","original":{"line":580,"column":0},"generated":{"line":580,"column":0}},{"source":"node_modules/data/data.js","original":{"line":581,"column":0},"generated":{"line":581,"column":0}},{"source":"node_modules/data/data.js","original":{"line":582,"column":0},"generated":{"line":582,"column":0}},{"source":"node_modules/data/data.js","original":{"line":583,"column":0},"generated":{"line":583,"column":0}},{"source":"node_modules/data/data.js","original":{"line":584,"column":0},"generated":{"line":584,"column":0}},{"source":"node_modules/data/data.js","original":{"line":585,"column":0},"generated":{"line":585,"column":0}},{"source":"node_modules/data/data.js","original":{"line":586,"column":0},"generated":{"line":586,"column":0}},{"source":"node_modules/data/data.js","original":{"line":587,"column":0},"generated":{"line":587,"column":0}},{"source":"node_modules/data/data.js","original":{"line":588,"column":0},"generated":{"line":588,"column":0}},{"source":"node_modules/data/data.js","original":{"line":589,"column":0},"generated":{"line":589,"column":0}},{"source":"node_modules/data/data.js","original":{"line":590,"column":0},"generated":{"line":590,"column":0}},{"source":"node_modules/data/data.js","original":{"line":591,"column":0},"generated":{"line":591,"column":0}},{"source":"node_modules/data/data.js","original":{"line":592,"column":0},"generated":{"line":592,"column":0}},{"source":"node_modules/data/data.js","original":{"line":593,"column":0},"generated":{"line":593,"column":0}},{"source":"node_modules/data/data.js","original":{"line":594,"column":0},"generated":{"line":594,"column":0}},{"source":"node_modules/data/data.js","original":{"line":595,"column":0},"generated":{"line":595,"column":0}},{"source":"node_modules/data/data.js","original":{"line":596,"column":0},"generated":{"line":596,"column":0}},{"source":"node_modules/data/data.js","original":{"line":597,"column":0},"generated":{"line":597,"column":0}},{"source":"node_modules/data/data.js","original":{"line":598,"column":0},"generated":{"line":598,"column":0}},{"source":"node_modules/data/data.js","original":{"line":599,"column":0},"generated":{"line":599,"column":0}},{"source":"node_modules/data/data.js","original":{"line":600,"column":0},"generated":{"line":600,"column":0}},{"source":"node_modules/data/data.js","original":{"line":601,"column":0},"generated":{"line":601,"column":0}},{"source":"node_modules/data/data.js","original":{"line":602,"column":0},"generated":{"line":602,"column":0}},{"source":"node_modules/data/data.js","original":{"line":603,"column":0},"generated":{"line":603,"column":0}},{"source":"node_modules/data/data.js","original":{"line":604,"column":0},"generated":{"line":604,"column":0}},{"source":"node_modules/data/data.js","original":{"line":605,"column":0},"generated":{"line":605,"column":0}},{"source":"node_modules/data/data.js","original":{"line":606,"column":0},"generated":{"line":606,"column":0}}],"sources":{"node_modules/data/data.js":"//     (c) 2012 Michael Aufreiter\n//     Data.js is freely distributable under the MIT license.\n//     Portions of Data.js are inspired or borrowed from Underscore.js,\n//     Backbone.js and Google's Visualization API.\n//     For all details and documentation:\n//     http://substance.io/michael/data-js\n\n(function(){\n\n  // Initial Setup\n  // -------------\n\n  // The top-level namespace. All public Data.js classes and modules will\n  // be attached to this. Exported for both CommonJS and the browser.\n  var Data;\n  if (typeof exports !== 'undefined') {\n    Data = exports;\n  } else {\n    Data = this.Data = {};\n  }\n  \n  // Current version of the library. Keep in sync with `package.json`.\n  Data.VERSION = '0.6.1';\n\n  // Require Underscore, if we're on the server, and it's not already present.\n  var _ = this._;\n  if (!_ && (typeof require !== 'undefined')) _ = require(\"underscore\");\n  \n  // Top Level API\n  // -------\n\n  Data.VALUE_TYPES = [\n    'string',\n    'object',\n    'number',\n    'boolean',\n    'date'\n  ];\n\n\n  Data.isValueType = function (type) {\n    return _.include(Data.VALUE_TYPES, _.last(type));\n  };\n\n\n  /*!\n  Math.uuid.js (v1.4)\n  http://www.broofa.com\n  mailto:robert@broofa.com\n\n  Copyright (c) 2010 Robert Kieffer\n  Dual licensed under the MIT and GPL licenses.\n  */\n\n  Data.uuid = function (prefix) {\n    var chars = '0123456789abcdefghijklmnopqrstuvwxyz'.split(''),\n        uuid = [],\n        radix = 16,\n        len = 32;\n\n    if (len) {\n      // Compact form\n      for (var i = 0; i < len; i++) uuid[i] = chars[0 | Math.random()*radix];\n    } else {\n      // rfc4122, version 4 form\n      var r;\n\n      // rfc4122 requires these characters\n      uuid[8] = uuid[13] = uuid[18] = uuid[23] = '-';\n      uuid[14] = '4';\n\n      // Fill in random data.  At i==19 set the high bits of clock sequence as\n      // per rfc4122, sec. 4.1.5\n      for (var i = 0; i < 36; i++) {\n        if (!uuid[i]) {\n          r = 0 | Math.random()*16;\n          uuid[i] = chars[(i == 19) ? (r & 0x3) | 0x8 : r];\n        }\n      }\n    }\n    return (prefix ? prefix : \"\") + uuid.join('');\n  };\n\n\n\n  // _.Events\n  // -----------------\n\n  // Regular expression used to split event strings\n  var eventSplitter = /\\s+/;\n\n  // A module that can be mixed in to *any object* in order to provide it with\n  // custom events. You may bind with `on` or remove with `off` callback functions\n  // to an event; trigger`-ing an event fires all callbacks in succession.\n  //\n  //     var object = {};\n  //     _.extend(object, Backbone.Events);\n  //     object.on('expand', function(){ alert('expanded'); });\n  //     object.trigger('expand');\n  //\n  _.Events = {\n\n    // Bind one or more space separated events, `events`, to a `callback`\n    // function. Passing `\"all\"` will bind the callback to all events fired.\n    on: function(events, callback, context) {\n\n      var calls, event, node, tail, list;\n      if (!callback) return this;\n      events = events.split(eventSplitter);\n      calls = this._callbacks || (this._callbacks = {});\n\n      // Create an immutable callback list, allowing traversal during\n      // modification.  The tail is an empty object that will always be used\n      // as the next node.\n      while (event = events.shift()) {\n        list = calls[event];\n        node = list ? list.tail : {};\n        node.next = tail = {};\n        node.context = context;\n        node.callback = callback;\n        calls[event] = {tail: tail, next: list ? list.next : node};\n      }\n\n      return this;\n    },\n\n    // Remove one or many callbacks. If `context` is null, removes all callbacks\n    // with that function. If `callback` is null, removes all callbacks for the\n    // event. If `events` is null, removes all bound callbacks for all events.\n    off: function(events, callback, context) {\n      var event, calls, node, tail, cb, ctx;\n\n      // No events, or removing *all* events.\n      if (!(calls = this._callbacks)) return;\n      if (!(events || callback || context)) {\n        delete this._callbacks;\n        return this;\n      }\n\n      // Loop through the listed events and contexts, splicing them out of the\n      // linked list of callbacks if appropriate.\n      events = events ? events.split(eventSplitter) : _.keys(calls);\n      while (event = events.shift()) {\n        node = calls[event];\n        delete calls[event];\n        if (!node || !(callback || context)) continue;\n        // Create a new list, omitting the indicated callbacks.\n        tail = node.tail;\n        while ((node = node.next) !== tail) {\n          cb = node.callback;\n          ctx = node.context;\n          if ((callback && cb !== callback) || (context && ctx !== context)) {\n            this.on(event, cb, ctx);\n          }\n        }\n      }\n\n      return this;\n    },\n\n    // Trigger one or many events, firing all bound callbacks. Callbacks are\n    // passed the same arguments as `trigger` is, apart from the event name\n    // (unless you're listening on `\"all\"`, which will cause your callback to\n    // receive the true name of the event as the first argument).\n    trigger: function(events) {\n      var event, node, calls, tail, args, all, rest;\n      if (!(calls = this._callbacks)) return this;\n      all = calls.all;\n      events = events.split(eventSplitter);\n      rest = slice.call(arguments, 1);\n\n      // For each event, walk through the linked list of callbacks twice,\n      // first to trigger the event, then to trigger any `\"all\"` callbacks.\n      while (event = events.shift()) {\n        if (node = calls[event]) {\n          tail = node.tail;\n          while ((node = node.next) !== tail) {\n            node.callback.apply(node.context || this, rest);\n          }\n        }\n        if (node = all) {\n          tail = node.tail;\n          args = [event].concat(rest);\n          while ((node = node.next) !== tail) {\n            node.callback.apply(node.context || this, args);\n          }\n        }\n      }\n\n      return this;\n    }\n\n  };\n\n  // Aliases for backwards compatibility.\n  _.Events.bind   = _.Events.on;\n  _.Events.unbind = _.Events.off;\n\n\n\n  // Data.Query\n  // --------------\n\n  // Query module to be mixed into Data.Graph and Data.Collection data structures\n  // No indexing yet, this has been shifted to Data.js 0.7.0\n\n  Data.Query = {\n\n    // Returns all objects matching a particular query object\n    query: function(qry) {\n      function toArray(v) {\n        return _.isArray(v) ? v : [v];\n      }\n\n      function match(obj, qry) {\n        var matched = true;\n\n        _.find(qry, function(value, property) {\n          var val = property === \"type\" ? obj.types : obj.properties[property];\n          if (property === \"_id\") val = obj._id;\n          var matchedValues = _.intersect(toArray(value), toArray(val));\n          if (matchedValues.length === 0) {\n            matched = false;\n            return true;\n          }\n        });\n        return matched;\n      }\n\n      var type = this.get(qry.type);\n      var objects = _.select(this.objects, function(o) {\n        return match(o, qry);\n      });\n      return Data.Collection.create(type, objects);\n    }\n  };\n\n  \n  // Data.Type\n  // --------------\n  \n  // A `Data.Type` denotes an IS A relationship about a `Data.Object`. \n  // For example, if you type the object 'Shakespear' with the type 'Person'\n  // you are saying that Shakespeare IS A person. Types are also used to hold\n  // collections of properties that belong to a certain group of objects.\n  \n\n  Data.Type = function(type) {\n      this._id = type._id;\n      this.type = \"/type/type\";\n      this.name = type.name;\n      this.meta = type.meta || {};\n\n      this.indexes = type.indexes || {};\n\n      this.properties = type.properties;\n      _.each(this.properties, _.bind(function(property, key) {\n        property.type = _.isArray(property.type) ? property.type : [ property.type ];\n        property.unique = _.isBoolean(property.unique) ? property.unique : true;\n      }, this));\n  };\n\n  _.extend(Data.Type.prototype, _.Events, {\n\n    // Serialize a single type node\n    toJSON: function() {\n      return {\n        _id: this._id,\n        type: '/type/type',\n        properties: this.properties,\n        meta: this.meta,\n        indexes: _.map(this.indexes, function(i) { return i.properties })\n      }\n    }\n  });\n  \n\n  // Data.Object\n  // --------------\n  \n  // Represents a typed data object within a `Data.Graph`.\n  // Provides access to properties, defined on the corresponding `Data.Type`.\n\n  Data.Object = function(object, host) {\n    this._id = object._id;\n    this.host = host;\n    this.properties = {};\n    this.set(object);\n  };\n\n  _.extend(Data.Object.prototype, _.Events, {\n\n    // Returns the most specific type\n    type: function() {\n      return this.host.get(_.last(this.types));\n    },\n\n    // Property lookup according to the type chain\n    property: function(property) {\n      var p = null;\n      _.find(_.clone(this.types).reverse(), _.bind(function(type) {\n        return p = this.host.get(type).properties[property];\n      }, this));\n      return p;\n    },\n\n    \n    // There are four different access scenarios for getting a certain property\n    // \n    // * Unique value types\n    // * Non-unique value types\n    // * Unique object types \n    // * Non-Unique object types \n    // \n    // For convenience there's a get method, which always returns the right\n    // result depending on the schema information. However, internally, every\n    // property of a resource is represented as a non-unique `Data.Hash` \n    // of `Data.Node` objects, even if it's a unique property. So if you want \n    // to be explicit you should use the native methods of `Data.Node`. If\n    // two arguments are provided `get` delegates to `Data.Node#get`.\n    \n    get: function(property, key) {\n      var p = this.property(property),\n          value = this.properties[property];\n\n      if (!p || value === undefined) return null;\n\n      if (Data.isValueType(p.type)) {\n        return value;\n      } else {\n        return p.unique ? this.host.get(value)\n                        : _.map(value, _.bind(function(v) { return this.host.get(v); }, this));   \n      }\n    },\n\n    // Sets properties on the object\n    // Existing properties are overridden / replaced\n    set: function(object) {\n      var that = this;\n      \n      if (object.type) this.types = _.isArray(object.type) ? object.type : [object.type];\n      if (object.meta) this.meta = this.object.meta;\n\n      _.each(object, _.bind(function(value, key) {\n        if (!that.property(key) || key === \"type\") return;\n        that.properties[key] = value;\n      }, this));\n    },\n\n    // Serialize an `Data.Object`'s properties\n    toJSON: function() {\n      return _.extend(this.properties, {_id: this._id, type: this.types})\n    }\n  });\n    \n  \n  // Data.Graph\n  // --------------\n  \n  // A `Data.Graph` can be used for representing arbitrary complex object\n  // graphs. Relations between objects are expressed through links that\n  // point to referred objects. Data.Graphs can be traversed in various ways.\n  // See the testsuite for usage.\n  \n  Data.Graph = function(graph, options) {\n    this.nodes = [];\n    this.objects = [];\n    this.types = [];\n    this.keys = {}; // Lookup objects by key\n    if (!graph) return;\n    this.merge(graph);\n  };\n\n _.extend(Data.Graph.prototype, Data.Query, _.Events, {\n    \n    // Merges in another Graph\n    merge: function(nodes) {      \n      _.each(nodes, _.bind(function(n, key) { this.set(_.extend(n, { _id: key })); }, this));\n      return this;\n    },\n\n    // API method for accessing objects in the graph space\n    get: function(id) {\n      return this.nodes[this.keys[id]];\n    },\n\n    set: function(node) {\n      var types = _.isArray(node.type) ? node.type : [node.type];\n      node._id = node._id ? node._id : Data.uuid('/' + _.last(_.last(types).split('/')) + '/');\n\n      function createNode() {\n        return _.last(types) === \"/type/type\" ? new Data.Type(node)\n                                              : new Data.Object(node, this);\n      }\n\n      var n = this.get(node._id);\n      if (!n) {\n        n = createNode.apply(this);\n        this.keys[node._id] = this.nodes.length;\n        this.nodes.push(n);\n        \n        // Register\n        if (_.last(types) === \"/type/type\") {\n          this.types.push(n);\n        } else {\n          this.objects.push(n);\n        }\n      } else {\n        n.set(node);\n      }\n      return n;\n    },\n\n    // Return all objects matching a query object\n    find: function(qry) {\n      return this.query(qry);\n    },\n    \n    // Delete node by id, referenced nodes remain untouched\n    del: function(id) {\n      var node = this.get(id);\n      if (!node) return;\n      node._deleted = true;\n    },\n\n    // Serializes the graph to the JSON-based exchange format\n    toJSON: function(extended) {\n      var result = {};\n      _.each(this.nodes, function(n) {\n        result[n._id] = n.toJSON()\n      });\n      return result;\n    }\n  });\n\n\n  // Data.Collection\n  // --------------\n  \n  // A Collection is a simple data abstraction format where a dataset under\n  // investigation conforms to a collection of data items that describes all\n  // facets of the underlying data in a simple and universal way. You can\n  // think of a Collection as a table of data, except it provides precise\n  // information about the data contained (meta-data).\n  \n  Data.Collection = function(spec) {\n    this.type = new Data.Type(spec.type, this);\n    this.objects = [];\n    this.length = 0;\n    this.keys = {};\n\n    _.each(spec.objects, _.bind(function(obj) {\n      this.add(obj);\n    }, this));\n  };\n\n  // Creates a Data.Collection using a Data.Type, and an array of Data.Objects\n  Data.Collection.create = function(type, objects) {\n    var c = new Data.Collection({type: type, objects: []});\n    c.objects = objects;\n    c.length = objects.length;\n\n    // Register keys for fast lookup\n    _.each(objects, function(o, i) {\n      c.keys[o._id] = i;\n    });\n    return c;\n  };\n  \n  _.extend(Data.Collection.prototype, _.Events, Data.Query, {\n\n    // Get an object (item) from the collection\n    get: function(id) {\n      if (id.match('^/type/')) return this.type;\n      return this.objects[this.keys[id]];\n    },\n\n    // Return object at a given index\n    at: function(index) {\n      return this.objects[index];\n    },\n\n    // Return index for a given key\n    index: function(key) {\n      return this.keys[key];\n    },\n\n    // Return key for a given index\n    key: function(index) {\n      return this.objects[index]._id;\n    },\n    \n    // Add a new object to the collection\n    add: function(obj) {\n      var o;\n      if (obj instanceof Data.Object) {\n        o = obj;\n        this.keys[o._id] = this.objects.length;\n        this.objects.push(o);\n        this.length = this.objects.length;\n      } else {\n        obj._id = obj._id ? obj._id : Data.uuid('/' + _.last(this.type._id.split('/')) + '/');\n        obj.type = this.type._id;\n\n        o = this.get(obj._id);  \n        if (!o) {\n          o = new Data.Object(obj, this);\n          this.keys[o._id] = this.objects.length;\n          this.objects.push(o);\n          this.length = this.objects.length;\n        } else {\n          o.set(obj);\n        }\n      }\n      return o;\n    },\n    \n    // Find objects that match a particular query\n    find: function(qry) {\n      qry[\"type\"] = this.type._id;\n      return this.query(qry);\n    },\n\n    // Iterate over all objects in the collection\n    each: function (fn) {\n      _.each(this.objects, function(object, i) {\n        fn.call(this, object, object._id, i);\n      }, this);\n      return this;\n    },\n\n    // Returns the first item\n    first: function() {\n      return this.length > 0 ? this.objects[0] : null;\n    },\n\n    // Returns the last item\n    last: function() {\n      return this.length > 0 ? this.objects[this.length-1] : null;\n    },\n\n    // Returns a sub-range of the collection\n    range: function(start, end) {\n      var result = Data.Collection.create(this.type, []);\n      for(var i=start; i<=end && i<this.objects.length; i++) {\n        result.add(this.at(i));\n      }\n      return result;\n    },\n\n    // Performs an intersection with the given *collection*\n    intersect: function(collection) {\n      var that = this,\n          result = new Data.Collection.create(this.type, []);\n      \n      // Find out which collection is smaller\n      var smaller, other;\n      if (collection.length < that.length) {\n        smaller = collection;\n        other = that;\n      } else {\n        smaller = that;\n        other = collection;\n      }\n\n      _.each(smaller.objects, function (object, index) {\n        if (other.get(object._id)) {\n          result.add(collection.get(object._id));\n        }\n      });\n      return result;\n    },\n    \n    // Performs an union with the given *hash*\n    union: function(collection) {\n      var that = this,\n          result = new Data.Collection.create(this.type, []);\n          \n      this.each(function(value, key) {\n        result.add(value);\n      });\n      collection.each(function(value, key) {\n        if (!result.get(key)) result.add(value);\n      });\n      return result;\n    },\n    \n    // Computes the difference between the current *collection* and a given *collection*\n    difference: function(collection) {\n      var that = this;\n          result = new Data.Collection.create(this.type, []);\n      this.each(function(value, key) {\n        if (!collection.get(key)) result.add(value);\n      });\n      return result;\n    },\n    \n    // Serialize\n    toJSON: function() {\n      return {\n        type: this.type.toJSON(),\n        objects: _.map(this.objects, function(n) { return n.toJSON(); })\n      };\n    }\n  });\n})();"},"lineCount":606}},"error":null,"hash":"9f18ecdd8c48ba03271231c1c3789adb","cacheData":{"env":{}}}