{"id":"node_modules/underscore/modules/flatten.js","dependencies":[{"name":"D:\\selftaught\\Front-end web deverloper\\tools\\parcel-experiment\\package.json","includedInParent":true,"mtime":1650575398222},{"name":"D:\\selftaught\\Front-end web deverloper\\tools\\parcel-experiment\\node_modules\\underscore\\modules\\package.json","includedInParent":true,"mtime":1650575355329},{"name":"./_flatten.js","loc":{"line":1,"column":21,"index":21},"parent":"D:\\selftaught\\Front-end web deverloper\\tools\\parcel-experiment\\node_modules\\underscore\\modules\\flatten.js","resolved":"D:\\selftaught\\Front-end web deverloper\\tools\\parcel-experiment\\node_modules\\underscore\\modules\\_flatten.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = flatten;\n\nvar _flatten2 = _interopRequireDefault(require(\"./_flatten.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// Flatten out an array, either recursively (by default), or up to `depth`.\n// Passing `true` or `false` as `depth` means `1` or `Infinity`, respectively.\nfunction flatten(array, depth) {\n  return (0, _flatten2.default)(array, depth, false);\n}"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":8,"column":0},"source":"node_modules/underscore/modules/flatten.js","original":{"line":1,"column":0}},{"generated":{"line":12,"column":0},"source":"node_modules/underscore/modules/flatten.js","original":{"line":3,"column":0}},{"generated":{"line":13,"column":0},"source":"node_modules/underscore/modules/flatten.js","original":{"line":4,"column":0}},{"generated":{"line":14,"column":0},"source":"node_modules/underscore/modules/flatten.js","original":{"line":5,"column":15}},{"name":"flatten","generated":{"line":14,"column":9},"source":"node_modules/underscore/modules/flatten.js","original":{"line":5,"column":24}},{"generated":{"line":14,"column":16},"source":"node_modules/underscore/modules/flatten.js","original":{"line":5,"column":15}},{"name":"array","generated":{"line":14,"column":17},"source":"node_modules/underscore/modules/flatten.js","original":{"line":5,"column":32}},{"generated":{"line":14,"column":22},"source":"node_modules/underscore/modules/flatten.js","original":{"line":5,"column":15}},{"name":"depth","generated":{"line":14,"column":24},"source":"node_modules/underscore/modules/flatten.js","original":{"line":5,"column":39}},{"generated":{"line":14,"column":29},"source":"node_modules/underscore/modules/flatten.js","original":{"line":5,"column":15}},{"generated":{"line":14,"column":31},"source":"node_modules/underscore/modules/flatten.js","original":{"line":5,"column":46}},{"generated":{"line":15,"column":0},"source":"node_modules/underscore/modules/flatten.js","original":{"line":6,"column":2}},{"generated":{"line":15,"column":9},"source":"node_modules/underscore/modules/flatten.js","original":{"line":6,"column":9}},{"name":"array","generated":{"line":15,"column":32},"source":"node_modules/underscore/modules/flatten.js","original":{"line":6,"column":18}},{"generated":{"line":15,"column":37},"source":"node_modules/underscore/modules/flatten.js","original":{"line":6,"column":9}},{"name":"depth","generated":{"line":15,"column":39},"source":"node_modules/underscore/modules/flatten.js","original":{"line":6,"column":25}},{"generated":{"line":15,"column":44},"source":"node_modules/underscore/modules/flatten.js","original":{"line":6,"column":9}},{"generated":{"line":15,"column":46},"source":"node_modules/underscore/modules/flatten.js","original":{"line":6,"column":32}},{"generated":{"line":15,"column":51},"source":"node_modules/underscore/modules/flatten.js","original":{"line":6,"column":9}},{"generated":{"line":15,"column":52},"source":"node_modules/underscore/modules/flatten.js","original":{"line":6,"column":2}},{"generated":{"line":16,"column":0},"source":"node_modules/underscore/modules/flatten.js","original":{"line":7,"column":1}}],"sources":{"node_modules/underscore/modules/flatten.js":"import _flatten from './_flatten.js';\n\n// Flatten out an array, either recursively (by default), or up to `depth`.\n// Passing `true` or `false` as `depth` means `1` or `Infinity`, respectively.\nexport default function flatten(array, depth) {\n  return _flatten(array, depth, false);\n}\n"},"lineCount":null}},"error":null,"hash":"0bf46d6bc49fd274382509b1c4d43bdf","cacheData":{"env":{}}}