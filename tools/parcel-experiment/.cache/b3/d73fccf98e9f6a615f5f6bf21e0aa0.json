{"id":"node_modules/underscore/modules/rest.js","dependencies":[{"name":"D:\\selftaught\\Front-end web deverloper\\tools\\parcel-experiment\\package.json","includedInParent":true,"mtime":1650575398222},{"name":"D:\\selftaught\\Front-end web deverloper\\tools\\parcel-experiment\\node_modules\\underscore\\modules\\package.json","includedInParent":true,"mtime":1650575355329},{"name":"./_setup.js","loc":{"line":1,"column":22,"index":22},"parent":"D:\\selftaught\\Front-end web deverloper\\tools\\parcel-experiment\\node_modules\\underscore\\modules\\rest.js","resolved":"D:\\selftaught\\Front-end web deverloper\\tools\\parcel-experiment\\node_modules\\underscore\\modules\\_setup.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = rest;\n\nvar _setup = require(\"./_setup.js\");\n\n// Returns everything but the first entry of the `array`. Especially useful on\n// the `arguments` object. Passing an **n** will return the rest N values in the\n// `array`.\nfunction rest(array, n, guard) {\n  return _setup.slice.call(array, n == null || guard ? 1 : n);\n}"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":8,"column":0},"source":"node_modules/underscore/modules/rest.js","original":{"line":1,"column":0}},{"generated":{"line":10,"column":0},"source":"node_modules/underscore/modules/rest.js","original":{"line":3,"column":0}},{"generated":{"line":11,"column":0},"source":"node_modules/underscore/modules/rest.js","original":{"line":4,"column":0}},{"generated":{"line":12,"column":0},"source":"node_modules/underscore/modules/rest.js","original":{"line":5,"column":0}},{"generated":{"line":13,"column":0},"source":"node_modules/underscore/modules/rest.js","original":{"line":6,"column":15}},{"name":"rest","generated":{"line":13,"column":9},"source":"node_modules/underscore/modules/rest.js","original":{"line":6,"column":24}},{"generated":{"line":13,"column":13},"source":"node_modules/underscore/modules/rest.js","original":{"line":6,"column":15}},{"name":"array","generated":{"line":13,"column":14},"source":"node_modules/underscore/modules/rest.js","original":{"line":6,"column":29}},{"generated":{"line":13,"column":19},"source":"node_modules/underscore/modules/rest.js","original":{"line":6,"column":15}},{"name":"n","generated":{"line":13,"column":21},"source":"node_modules/underscore/modules/rest.js","original":{"line":6,"column":36}},{"generated":{"line":13,"column":22},"source":"node_modules/underscore/modules/rest.js","original":{"line":6,"column":15}},{"name":"guard","generated":{"line":13,"column":24},"source":"node_modules/underscore/modules/rest.js","original":{"line":6,"column":39}},{"generated":{"line":13,"column":29},"source":"node_modules/underscore/modules/rest.js","original":{"line":6,"column":15}},{"generated":{"line":13,"column":31},"source":"node_modules/underscore/modules/rest.js","original":{"line":6,"column":46}},{"generated":{"line":14,"column":0},"source":"node_modules/underscore/modules/rest.js","original":{"line":7,"column":2}},{"name":"slice","generated":{"line":14,"column":9},"source":"node_modules/underscore/modules/rest.js","original":{"line":7,"column":9}},{"name":"call","generated":{"line":14,"column":22},"source":"node_modules/underscore/modules/rest.js","original":{"line":7,"column":15}},{"generated":{"line":14,"column":26},"source":"node_modules/underscore/modules/rest.js","original":{"line":7,"column":9}},{"name":"array","generated":{"line":14,"column":27},"source":"node_modules/underscore/modules/rest.js","original":{"line":7,"column":20}},{"generated":{"line":14,"column":32},"source":"node_modules/underscore/modules/rest.js","original":{"line":7,"column":9}},{"name":"n","generated":{"line":14,"column":34},"source":"node_modules/underscore/modules/rest.js","original":{"line":7,"column":27}},{"generated":{"line":14,"column":35},"source":"node_modules/underscore/modules/rest.js","original":{"line":7,"column":28}},{"generated":{"line":14,"column":39},"source":"node_modules/underscore/modules/rest.js","original":{"line":7,"column":32}},{"generated":{"line":14,"column":43},"source":"node_modules/underscore/modules/rest.js","original":{"line":7,"column":27}},{"name":"guard","generated":{"line":14,"column":47},"source":"node_modules/underscore/modules/rest.js","original":{"line":7,"column":40}},{"generated":{"line":14,"column":52},"source":"node_modules/underscore/modules/rest.js","original":{"line":7,"column":27}},{"generated":{"line":14,"column":55},"source":"node_modules/underscore/modules/rest.js","original":{"line":7,"column":48}},{"generated":{"line":14,"column":56},"source":"node_modules/underscore/modules/rest.js","original":{"line":7,"column":27}},{"name":"n","generated":{"line":14,"column":59},"source":"node_modules/underscore/modules/rest.js","original":{"line":7,"column":52}},{"generated":{"line":14,"column":60},"source":"node_modules/underscore/modules/rest.js","original":{"line":7,"column":9}},{"generated":{"line":14,"column":61},"source":"node_modules/underscore/modules/rest.js","original":{"line":7,"column":2}},{"generated":{"line":15,"column":0},"source":"node_modules/underscore/modules/rest.js","original":{"line":8,"column":1}}],"sources":{"node_modules/underscore/modules/rest.js":"import { slice } from './_setup.js';\n\n// Returns everything but the first entry of the `array`. Especially useful on\n// the `arguments` object. Passing an **n** will return the rest N values in the\n// `array`.\nexport default function rest(array, n, guard) {\n  return slice.call(array, n == null || guard ? 1 : n);\n}\n"},"lineCount":null}},"error":null,"hash":"289392180a09c905a0e06d520f8a52c9","cacheData":{"env":{}}}