{"id":"node_modules/underscore/modules/union.js","dependencies":[{"name":"D:\\selftaught\\Front-end web deverloper\\tools\\parcel-experiment\\package.json","includedInParent":true,"mtime":1650575398222},{"name":"D:\\selftaught\\Front-end web deverloper\\tools\\parcel-experiment\\node_modules\\underscore\\modules\\package.json","includedInParent":true,"mtime":1650575355329},{"name":"./restArguments.js","loc":{"line":1,"column":26,"index":26},"parent":"D:\\selftaught\\Front-end web deverloper\\tools\\parcel-experiment\\node_modules\\underscore\\modules\\union.js","resolved":"D:\\selftaught\\Front-end web deverloper\\tools\\parcel-experiment\\node_modules\\underscore\\modules\\restArguments.js"},{"name":"./uniq.js","loc":{"line":2,"column":17,"index":65},"parent":"D:\\selftaught\\Front-end web deverloper\\tools\\parcel-experiment\\node_modules\\underscore\\modules\\union.js","resolved":"D:\\selftaught\\Front-end web deverloper\\tools\\parcel-experiment\\node_modules\\underscore\\modules\\uniq.js"},{"name":"./_flatten.js","loc":{"line":3,"column":20,"index":98},"parent":"D:\\selftaught\\Front-end web deverloper\\tools\\parcel-experiment\\node_modules\\underscore\\modules\\union.js","resolved":"D:\\selftaught\\Front-end web deverloper\\tools\\parcel-experiment\\node_modules\\underscore\\modules\\_flatten.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _restArguments = _interopRequireDefault(require(\"./restArguments.js\"));\n\nvar _uniq = _interopRequireDefault(require(\"./uniq.js\"));\n\nvar _flatten = _interopRequireDefault(require(\"./_flatten.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// Produce an array that contains the union: each distinct element from all of\n// the passed-in arrays.\nvar _default = (0, _restArguments.default)(function (arrays) {\n  return (0, _uniq.default)((0, _flatten.default)(arrays, true, true));\n});\n\nexports.default = _default;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":8,"column":0},"source":"node_modules/underscore/modules/union.js","original":{"line":1,"column":0}},{"generated":{"line":10,"column":0},"source":"node_modules/underscore/modules/union.js","original":{"line":2,"column":0}},{"generated":{"line":12,"column":0},"source":"node_modules/underscore/modules/union.js","original":{"line":3,"column":0}},{"generated":{"line":16,"column":0},"source":"node_modules/underscore/modules/union.js","original":{"line":5,"column":0}},{"generated":{"line":17,"column":0},"source":"node_modules/underscore/modules/union.js","original":{"line":6,"column":0}},{"generated":{"line":18,"column":15},"source":"node_modules/underscore/modules/union.js","original":{"line":7,"column":15}},{"generated":{"line":18,"column":43},"source":"node_modules/underscore/modules/union.js","original":{"line":7,"column":29}},{"name":"arrays","generated":{"line":18,"column":53},"source":"node_modules/underscore/modules/union.js","original":{"line":7,"column":38}},{"generated":{"line":18,"column":59},"source":"node_modules/underscore/modules/union.js","original":{"line":7,"column":29}},{"generated":{"line":18,"column":61},"source":"node_modules/underscore/modules/union.js","original":{"line":7,"column":46}},{"generated":{"line":19,"column":0},"source":"node_modules/underscore/modules/union.js","original":{"line":8,"column":2}},{"generated":{"line":19,"column":9},"source":"node_modules/underscore/modules/union.js","original":{"line":8,"column":9}},{"generated":{"line":19,"column":28},"source":"node_modules/underscore/modules/union.js","original":{"line":8,"column":14}},{"name":"arrays","generated":{"line":19,"column":50},"source":"node_modules/underscore/modules/union.js","original":{"line":8,"column":22}},{"generated":{"line":19,"column":56},"source":"node_modules/underscore/modules/union.js","original":{"line":8,"column":14}},{"generated":{"line":19,"column":58},"source":"node_modules/underscore/modules/union.js","original":{"line":8,"column":30}},{"generated":{"line":19,"column":62},"source":"node_modules/underscore/modules/union.js","original":{"line":8,"column":14}},{"generated":{"line":19,"column":64},"source":"node_modules/underscore/modules/union.js","original":{"line":8,"column":36}},{"generated":{"line":19,"column":68},"source":"node_modules/underscore/modules/union.js","original":{"line":8,"column":14}},{"generated":{"line":19,"column":69},"source":"node_modules/underscore/modules/union.js","original":{"line":8,"column":9}},{"generated":{"line":19,"column":70},"source":"node_modules/underscore/modules/union.js","original":{"line":8,"column":2}},{"generated":{"line":20,"column":0},"source":"node_modules/underscore/modules/union.js","original":{"line":9,"column":1}},{"generated":{"line":20,"column":1},"source":"node_modules/underscore/modules/union.js","original":{"line":7,"column":15}}],"sources":{"node_modules/underscore/modules/union.js":"import restArguments from './restArguments.js';\nimport uniq from './uniq.js';\nimport flatten from './_flatten.js';\n\n// Produce an array that contains the union: each distinct element from all of\n// the passed-in arrays.\nexport default restArguments(function(arrays) {\n  return uniq(flatten(arrays, true, true));\n});\n"},"lineCount":null}},"error":null,"hash":"cab4f09015c0a3ebdcaec68df17e8290","cacheData":{"env":{}}}