{"id":"node_modules/underscore/modules/findKey.js","dependencies":[{"name":"D:\\selftaught\\Front-end web deverloper\\tools\\parcel-experiment\\package.json","includedInParent":true,"mtime":1650575398222},{"name":"D:\\selftaught\\Front-end web deverloper\\tools\\parcel-experiment\\node_modules\\underscore\\modules\\package.json","includedInParent":true,"mtime":1650575355329},{"name":"./_cb.js","loc":{"line":1,"column":15,"index":15},"parent":"D:\\selftaught\\Front-end web deverloper\\tools\\parcel-experiment\\node_modules\\underscore\\modules\\findKey.js","resolved":"D:\\selftaught\\Front-end web deverloper\\tools\\parcel-experiment\\node_modules\\underscore\\modules\\_cb.js"},{"name":"./keys.js","loc":{"line":2,"column":17,"index":44},"parent":"D:\\selftaught\\Front-end web deverloper\\tools\\parcel-experiment\\node_modules\\underscore\\modules\\findKey.js","resolved":"D:\\selftaught\\Front-end web deverloper\\tools\\parcel-experiment\\node_modules\\underscore\\modules\\keys.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = findKey;\n\nvar _cb = _interopRequireDefault(require(\"./_cb.js\"));\n\nvar _keys2 = _interopRequireDefault(require(\"./keys.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// Returns the first key on an object that passes a truth test.\nfunction findKey(obj, predicate, context) {\n  predicate = (0, _cb.default)(predicate, context);\n\n  var _keys = (0, _keys2.default)(obj),\n      key;\n\n  for (var i = 0, length = _keys.length; i < length; i++) {\n    key = _keys[i];\n    if (predicate(obj[key], key, obj)) return key;\n  }\n}"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":8,"column":0},"source":"node_modules/underscore/modules/findKey.js","original":{"line":1,"column":0}},{"generated":{"line":10,"column":0},"source":"node_modules/underscore/modules/findKey.js","original":{"line":2,"column":0}},{"generated":{"line":14,"column":0},"source":"node_modules/underscore/modules/findKey.js","original":{"line":4,"column":0}},{"generated":{"line":15,"column":0},"source":"node_modules/underscore/modules/findKey.js","original":{"line":5,"column":15}},{"name":"findKey","generated":{"line":15,"column":9},"source":"node_modules/underscore/modules/findKey.js","original":{"line":5,"column":24}},{"generated":{"line":15,"column":16},"source":"node_modules/underscore/modules/findKey.js","original":{"line":5,"column":15}},{"name":"obj","generated":{"line":15,"column":17},"source":"node_modules/underscore/modules/findKey.js","original":{"line":5,"column":32}},{"generated":{"line":15,"column":20},"source":"node_modules/underscore/modules/findKey.js","original":{"line":5,"column":15}},{"name":"predicate","generated":{"line":15,"column":22},"source":"node_modules/underscore/modules/findKey.js","original":{"line":5,"column":37}},{"generated":{"line":15,"column":31},"source":"node_modules/underscore/modules/findKey.js","original":{"line":5,"column":15}},{"name":"context","generated":{"line":15,"column":33},"source":"node_modules/underscore/modules/findKey.js","original":{"line":5,"column":48}},{"generated":{"line":15,"column":40},"source":"node_modules/underscore/modules/findKey.js","original":{"line":5,"column":15}},{"generated":{"line":15,"column":42},"source":"node_modules/underscore/modules/findKey.js","original":{"line":5,"column":57}},{"name":"predicate","generated":{"line":16,"column":0},"source":"node_modules/underscore/modules/findKey.js","original":{"line":6,"column":2}},{"name":"predicate","generated":{"line":16,"column":2},"source":"node_modules/underscore/modules/findKey.js","original":{"line":6,"column":2}},{"generated":{"line":16,"column":11},"source":"node_modules/underscore/modules/findKey.js","original":{"line":6,"column":11}},{"generated":{"line":16,"column":14},"source":"node_modules/underscore/modules/findKey.js","original":{"line":6,"column":14}},{"name":"predicate","generated":{"line":16,"column":31},"source":"node_modules/underscore/modules/findKey.js","original":{"line":6,"column":17}},{"generated":{"line":16,"column":40},"source":"node_modules/underscore/modules/findKey.js","original":{"line":6,"column":14}},{"name":"context","generated":{"line":16,"column":42},"source":"node_modules/underscore/modules/findKey.js","original":{"line":6,"column":28}},{"generated":{"line":16,"column":49},"source":"node_modules/underscore/modules/findKey.js","original":{"line":6,"column":14}},{"generated":{"line":16,"column":50},"source":"node_modules/underscore/modules/findKey.js","original":{"line":6,"column":2}},{"generated":{"line":18,"column":0},"source":"node_modules/underscore/modules/findKey.js","original":{"line":7,"column":2}},{"name":"_keys","generated":{"line":18,"column":6},"source":"node_modules/underscore/modules/findKey.js","original":{"line":7,"column":6}},{"generated":{"line":18,"column":11},"source":"node_modules/underscore/modules/findKey.js","original":{"line":7,"column":11}},{"generated":{"line":18,"column":14},"source":"node_modules/underscore/modules/findKey.js","original":{"line":7,"column":14}},{"name":"obj","generated":{"line":18,"column":34},"source":"node_modules/underscore/modules/findKey.js","original":{"line":7,"column":19}},{"generated":{"line":18,"column":37},"source":"node_modules/underscore/modules/findKey.js","original":{"line":7,"column":14}},{"generated":{"line":18,"column":38},"source":"node_modules/underscore/modules/findKey.js","original":{"line":7,"column":2}},{"generated":{"line":19,"column":0},"source":"node_modules/underscore/modules/findKey.js","original":{"line":7,"column":2}},{"name":"key","generated":{"line":19,"column":6},"source":"node_modules/underscore/modules/findKey.js","original":{"line":7,"column":25}},{"generated":{"line":19,"column":9},"source":"node_modules/underscore/modules/findKey.js","original":{"line":7,"column":2}},{"generated":{"line":21,"column":0},"source":"node_modules/underscore/modules/findKey.js","original":{"line":8,"column":2}},{"generated":{"line":21,"column":7},"source":"node_modules/underscore/modules/findKey.js","original":{"line":8,"column":7}},{"name":"i","generated":{"line":21,"column":11},"source":"node_modules/underscore/modules/findKey.js","original":{"line":8,"column":11}},{"generated":{"line":21,"column":12},"source":"node_modules/underscore/modules/findKey.js","original":{"line":8,"column":12}},{"generated":{"line":21,"column":15},"source":"node_modules/underscore/modules/findKey.js","original":{"line":8,"column":15}},{"generated":{"line":21,"column":16},"source":"node_modules/underscore/modules/findKey.js","original":{"line":8,"column":7}},{"name":"length","generated":{"line":21,"column":18},"source":"node_modules/underscore/modules/findKey.js","original":{"line":8,"column":18}},{"generated":{"line":21,"column":24},"source":"node_modules/underscore/modules/findKey.js","original":{"line":8,"column":24}},{"name":"_keys","generated":{"line":21,"column":27},"source":"node_modules/underscore/modules/findKey.js","original":{"line":8,"column":27}},{"generated":{"line":21,"column":32},"source":"node_modules/underscore/modules/findKey.js","original":{"line":8,"column":32}},{"name":"length","generated":{"line":21,"column":33},"source":"node_modules/underscore/modules/findKey.js","original":{"line":8,"column":33}},{"generated":{"line":21,"column":39},"source":"node_modules/underscore/modules/findKey.js","original":{"line":8,"column":2}},{"name":"i","generated":{"line":21,"column":41},"source":"node_modules/underscore/modules/findKey.js","original":{"line":8,"column":41}},{"generated":{"line":21,"column":42},"source":"node_modules/underscore/modules/findKey.js","original":{"line":8,"column":42}},{"name":"length","generated":{"line":21,"column":45},"source":"node_modules/underscore/modules/findKey.js","original":{"line":8,"column":45}},{"generated":{"line":21,"column":51},"source":"node_modules/underscore/modules/findKey.js","original":{"line":8,"column":2}},{"name":"i","generated":{"line":21,"column":53},"source":"node_modules/underscore/modules/findKey.js","original":{"line":8,"column":53}},{"generated":{"line":21,"column":54},"source":"node_modules/underscore/modules/findKey.js","original":{"line":8,"column":54}},{"generated":{"line":21,"column":56},"source":"node_modules/underscore/modules/findKey.js","original":{"line":8,"column":2}},{"generated":{"line":21,"column":58},"source":"node_modules/underscore/modules/findKey.js","original":{"line":8,"column":58}},{"name":"key","generated":{"line":22,"column":0},"source":"node_modules/underscore/modules/findKey.js","original":{"line":9,"column":4}},{"name":"key","generated":{"line":22,"column":4},"source":"node_modules/underscore/modules/findKey.js","original":{"line":9,"column":4}},{"generated":{"line":22,"column":7},"source":"node_modules/underscore/modules/findKey.js","original":{"line":9,"column":7}},{"name":"_keys","generated":{"line":22,"column":10},"source":"node_modules/underscore/modules/findKey.js","original":{"line":9,"column":10}},{"generated":{"line":22,"column":15},"source":"node_modules/underscore/modules/findKey.js","original":{"line":9,"column":15}},{"name":"i","generated":{"line":22,"column":16},"source":"node_modules/underscore/modules/findKey.js","original":{"line":9,"column":16}},{"generated":{"line":22,"column":17},"source":"node_modules/underscore/modules/findKey.js","original":{"line":9,"column":15}},{"generated":{"line":22,"column":18},"source":"node_modules/underscore/modules/findKey.js","original":{"line":9,"column":4}},{"generated":{"line":23,"column":0},"source":"node_modules/underscore/modules/findKey.js","original":{"line":10,"column":4}},{"name":"predicate","generated":{"line":23,"column":8},"source":"node_modules/underscore/modules/findKey.js","original":{"line":10,"column":8}},{"generated":{"line":23,"column":17},"source":"node_modules/underscore/modules/findKey.js","original":{"line":10,"column":17}},{"name":"obj","generated":{"line":23,"column":18},"source":"node_modules/underscore/modules/findKey.js","original":{"line":10,"column":18}},{"generated":{"line":23,"column":21},"source":"node_modules/underscore/modules/findKey.js","original":{"line":10,"column":21}},{"name":"key","generated":{"line":23,"column":22},"source":"node_modules/underscore/modules/findKey.js","original":{"line":10,"column":22}},{"generated":{"line":23,"column":25},"source":"node_modules/underscore/modules/findKey.js","original":{"line":10,"column":21}},{"generated":{"line":23,"column":26},"source":"node_modules/underscore/modules/findKey.js","original":{"line":10,"column":17}},{"name":"key","generated":{"line":23,"column":28},"source":"node_modules/underscore/modules/findKey.js","original":{"line":10,"column":28}},{"generated":{"line":23,"column":31},"source":"node_modules/underscore/modules/findKey.js","original":{"line":10,"column":17}},{"name":"obj","generated":{"line":23,"column":33},"source":"node_modules/underscore/modules/findKey.js","original":{"line":10,"column":33}},{"generated":{"line":23,"column":36},"source":"node_modules/underscore/modules/findKey.js","original":{"line":10,"column":17}},{"generated":{"line":23,"column":37},"source":"node_modules/underscore/modules/findKey.js","original":{"line":10,"column":4}},{"generated":{"line":23,"column":39},"source":"node_modules/underscore/modules/findKey.js","original":{"line":10,"column":39}},{"name":"key","generated":{"line":23,"column":46},"source":"node_modules/underscore/modules/findKey.js","original":{"line":10,"column":46}},{"generated":{"line":23,"column":49},"source":"node_modules/underscore/modules/findKey.js","original":{"line":10,"column":39}},{"generated":{"line":24,"column":0},"source":"node_modules/underscore/modules/findKey.js","original":{"line":11,"column":3}},{"generated":{"line":25,"column":0},"source":"node_modules/underscore/modules/findKey.js","original":{"line":12,"column":1}}],"sources":{"node_modules/underscore/modules/findKey.js":"import cb from './_cb.js';\nimport keys from './keys.js';\n\n// Returns the first key on an object that passes a truth test.\nexport default function findKey(obj, predicate, context) {\n  predicate = cb(predicate, context);\n  var _keys = keys(obj), key;\n  for (var i = 0, length = _keys.length; i < length; i++) {\n    key = _keys[i];\n    if (predicate(obj[key], key, obj)) return key;\n  }\n}\n"},"lineCount":null}},"error":null,"hash":"df7e4f2885d0d98f2aab8e16aaeeaacf","cacheData":{"env":{}}}