{"id":"node_modules/underscore/modules/isTypedArray.js","dependencies":[{"name":"D:\\selftaught\\Front-end web deverloper\\tools\\parcel-experiment\\package.json","includedInParent":true,"mtime":1650575398222},{"name":"D:\\selftaught\\Front-end web deverloper\\tools\\parcel-experiment\\node_modules\\underscore\\modules\\package.json","includedInParent":true,"mtime":1650575355329},{"name":"./_setup.js","loc":{"line":1,"column":60,"index":60},"parent":"D:\\selftaught\\Front-end web deverloper\\tools\\parcel-experiment\\node_modules\\underscore\\modules\\isTypedArray.js","resolved":"D:\\selftaught\\Front-end web deverloper\\tools\\parcel-experiment\\node_modules\\underscore\\modules\\_setup.js"},{"name":"./isDataView.js","loc":{"line":2,"column":23,"index":98},"parent":"D:\\selftaught\\Front-end web deverloper\\tools\\parcel-experiment\\node_modules\\underscore\\modules\\isTypedArray.js","resolved":"D:\\selftaught\\Front-end web deverloper\\tools\\parcel-experiment\\node_modules\\underscore\\modules\\isDataView.js"},{"name":"./constant.js","loc":{"line":3,"column":21,"index":138},"parent":"D:\\selftaught\\Front-end web deverloper\\tools\\parcel-experiment\\node_modules\\underscore\\modules\\isTypedArray.js","resolved":"D:\\selftaught\\Front-end web deverloper\\tools\\parcel-experiment\\node_modules\\underscore\\modules\\constant.js"},{"name":"./_isBufferLike.js","loc":{"line":4,"column":25,"index":180},"parent":"D:\\selftaught\\Front-end web deverloper\\tools\\parcel-experiment\\node_modules\\underscore\\modules\\isTypedArray.js","resolved":"D:\\selftaught\\Front-end web deverloper\\tools\\parcel-experiment\\node_modules\\underscore\\modules\\_isBufferLike.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _setup = require(\"./_setup.js\");\n\nvar _isDataView = _interopRequireDefault(require(\"./isDataView.js\"));\n\nvar _constant = _interopRequireDefault(require(\"./constant.js\"));\n\nvar _isBufferLike = _interopRequireDefault(require(\"./_isBufferLike.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// Is a given value a typed array?\nvar typedArrayPattern = /\\[object ((I|Ui)nt(8|16|32)|Float(32|64)|Uint8Clamped|Big(I|Ui)nt64)Array\\]/;\n\nfunction isTypedArray(obj) {\n  // `ArrayBuffer.isView` is the most future-proof, so use it when available.\n  // Otherwise, fall back on the above regular expression.\n  return _setup.nativeIsView ? (0, _setup.nativeIsView)(obj) && !(0, _isDataView.default)(obj) : (0, _isBufferLike.default)(obj) && typedArrayPattern.test(_setup.toString.call(obj));\n}\n\nvar _default = _setup.supportsArrayBuffer ? isTypedArray : (0, _constant.default)(false);\n\nexports.default = _default;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":8,"column":0},"source":"node_modules/underscore/modules/isTypedArray.js","original":{"line":1,"column":0}},{"generated":{"line":10,"column":0},"source":"node_modules/underscore/modules/isTypedArray.js","original":{"line":2,"column":0}},{"generated":{"line":12,"column":0},"source":"node_modules/underscore/modules/isTypedArray.js","original":{"line":3,"column":0}},{"generated":{"line":14,"column":0},"source":"node_modules/underscore/modules/isTypedArray.js","original":{"line":4,"column":0}},{"generated":{"line":18,"column":0},"source":"node_modules/underscore/modules/isTypedArray.js","original":{"line":6,"column":0}},{"generated":{"line":19,"column":0},"source":"node_modules/underscore/modules/isTypedArray.js","original":{"line":7,"column":0}},{"name":"typedArrayPattern","generated":{"line":19,"column":4},"source":"node_modules/underscore/modules/isTypedArray.js","original":{"line":7,"column":4}},{"generated":{"line":19,"column":21},"source":"node_modules/underscore/modules/isTypedArray.js","original":{"line":7,"column":21}},{"generated":{"line":19,"column":24},"source":"node_modules/underscore/modules/isTypedArray.js","original":{"line":7,"column":24}},{"generated":{"line":19,"column":101},"source":"node_modules/underscore/modules/isTypedArray.js","original":{"line":7,"column":0}},{"generated":{"line":21,"column":0},"source":"node_modules/underscore/modules/isTypedArray.js","original":{"line":8,"column":0}},{"name":"isTypedArray","generated":{"line":21,"column":9},"source":"node_modules/underscore/modules/isTypedArray.js","original":{"line":8,"column":9}},{"generated":{"line":21,"column":21},"source":"node_modules/underscore/modules/isTypedArray.js","original":{"line":8,"column":0}},{"name":"obj","generated":{"line":21,"column":22},"source":"node_modules/underscore/modules/isTypedArray.js","original":{"line":8,"column":22}},{"generated":{"line":21,"column":25},"source":"node_modules/underscore/modules/isTypedArray.js","original":{"line":8,"column":0}},{"generated":{"line":21,"column":27},"source":"node_modules/underscore/modules/isTypedArray.js","original":{"line":8,"column":27}},{"generated":{"line":22,"column":0},"source":"node_modules/underscore/modules/isTypedArray.js","original":{"line":9,"column":2}},{"generated":{"line":23,"column":0},"source":"node_modules/underscore/modules/isTypedArray.js","original":{"line":10,"column":2}},{"generated":{"line":24,"column":0},"source":"node_modules/underscore/modules/isTypedArray.js","original":{"line":11,"column":2}},{"name":"nativeIsView","generated":{"line":24,"column":9},"source":"node_modules/underscore/modules/isTypedArray.js","original":{"line":11,"column":9}},{"generated":{"line":24,"column":31},"source":"node_modules/underscore/modules/isTypedArray.js","original":{"line":11,"column":25}},{"name":"obj","generated":{"line":24,"column":56},"source":"node_modules/underscore/modules/isTypedArray.js","original":{"line":11,"column":38}},{"generated":{"line":24,"column":59},"source":"node_modules/underscore/modules/isTypedArray.js","original":{"line":11,"column":25}},{"generated":{"line":24,"column":64},"source":"node_modules/underscore/modules/isTypedArray.js","original":{"line":11,"column":46}},{"generated":{"line":24,"column":65},"source":"node_modules/underscore/modules/isTypedArray.js","original":{"line":11,"column":47}},{"name":"obj","generated":{"line":24,"column":90},"source":"node_modules/underscore/modules/isTypedArray.js","original":{"line":11,"column":58}},{"generated":{"line":24,"column":93},"source":"node_modules/underscore/modules/isTypedArray.js","original":{"line":11,"column":47}},{"generated":{"line":24,"column":94},"source":"node_modules/underscore/modules/isTypedArray.js","original":{"line":11,"column":9}},{"generated":{"line":24,"column":97},"source":"node_modules/underscore/modules/isTypedArray.js","original":{"line":12,"column":16}},{"name":"obj","generated":{"line":24,"column":124},"source":"node_modules/underscore/modules/isTypedArray.js","original":{"line":12,"column":29}},{"generated":{"line":24,"column":127},"source":"node_modules/underscore/modules/isTypedArray.js","original":{"line":12,"column":16}},{"name":"typedArrayPattern","generated":{"line":24,"column":132},"source":"node_modules/underscore/modules/isTypedArray.js","original":{"line":12,"column":37}},{"generated":{"line":24,"column":149},"source":"node_modules/underscore/modules/isTypedArray.js","original":{"line":12,"column":54}},{"name":"test","generated":{"line":24,"column":150},"source":"node_modules/underscore/modules/isTypedArray.js","original":{"line":12,"column":55}},{"generated":{"line":24,"column":154},"source":"node_modules/underscore/modules/isTypedArray.js","original":{"line":12,"column":37}},{"name":"toString","generated":{"line":24,"column":155},"source":"node_modules/underscore/modules/isTypedArray.js","original":{"line":12,"column":60}},{"name":"call","generated":{"line":24,"column":171},"source":"node_modules/underscore/modules/isTypedArray.js","original":{"line":12,"column":69}},{"generated":{"line":24,"column":175},"source":"node_modules/underscore/modules/isTypedArray.js","original":{"line":12,"column":60}},{"name":"obj","generated":{"line":24,"column":176},"source":"node_modules/underscore/modules/isTypedArray.js","original":{"line":12,"column":74}},{"generated":{"line":24,"column":179},"source":"node_modules/underscore/modules/isTypedArray.js","original":{"line":12,"column":60}},{"generated":{"line":24,"column":180},"source":"node_modules/underscore/modules/isTypedArray.js","original":{"line":12,"column":37}},{"generated":{"line":24,"column":181},"source":"node_modules/underscore/modules/isTypedArray.js","original":{"line":11,"column":2}},{"generated":{"line":25,"column":0},"source":"node_modules/underscore/modules/isTypedArray.js","original":{"line":13,"column":1}},{"name":"supportsArrayBuffer","generated":{"line":27,"column":15},"source":"node_modules/underscore/modules/isTypedArray.js","original":{"line":15,"column":15}},{"name":"isTypedArray","generated":{"line":27,"column":44},"source":"node_modules/underscore/modules/isTypedArray.js","original":{"line":15,"column":37}},{"generated":{"line":27,"column":56},"source":"node_modules/underscore/modules/isTypedArray.js","original":{"line":15,"column":15}},{"generated":{"line":27,"column":59},"source":"node_modules/underscore/modules/isTypedArray.js","original":{"line":15,"column":52}},{"generated":{"line":27,"column":82},"source":"node_modules/underscore/modules/isTypedArray.js","original":{"line":15,"column":61}},{"generated":{"line":27,"column":87},"source":"node_modules/underscore/modules/isTypedArray.js","original":{"line":15,"column":52}}],"sources":{"node_modules/underscore/modules/isTypedArray.js":"import { supportsArrayBuffer, nativeIsView, toString } from './_setup.js';\nimport isDataView from './isDataView.js';\nimport constant from './constant.js';\nimport isBufferLike from './_isBufferLike.js';\n\n// Is a given value a typed array?\nvar typedArrayPattern = /\\[object ((I|Ui)nt(8|16|32)|Float(32|64)|Uint8Clamped|Big(I|Ui)nt64)Array\\]/;\nfunction isTypedArray(obj) {\n  // `ArrayBuffer.isView` is the most future-proof, so use it when available.\n  // Otherwise, fall back on the above regular expression.\n  return nativeIsView ? (nativeIsView(obj) && !isDataView(obj)) :\n                isBufferLike(obj) && typedArrayPattern.test(toString.call(obj));\n}\n\nexport default supportsArrayBuffer ? isTypedArray : constant(false);\n"},"lineCount":null}},"error":null,"hash":"fc043e837df7005ebc1ed78e34d677eb","cacheData":{"env":{}}}