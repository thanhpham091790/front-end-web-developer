{"id":"node_modules/underscore/modules/find.js","dependencies":[{"name":"D:\\selftaught\\Front-end web deverloper\\tools\\parcel-experiment\\package.json","includedInParent":true,"mtime":1650575398222},{"name":"D:\\selftaught\\Front-end web deverloper\\tools\\parcel-experiment\\node_modules\\underscore\\modules\\package.json","includedInParent":true,"mtime":1650575355329},{"name":"./_isArrayLike.js","loc":{"line":1,"column":24,"index":24},"parent":"D:\\selftaught\\Front-end web deverloper\\tools\\parcel-experiment\\node_modules\\underscore\\modules\\find.js","resolved":"D:\\selftaught\\Front-end web deverloper\\tools\\parcel-experiment\\node_modules\\underscore\\modules\\_isArrayLike.js"},{"name":"./findIndex.js","loc":{"line":2,"column":22,"index":67},"parent":"D:\\selftaught\\Front-end web deverloper\\tools\\parcel-experiment\\node_modules\\underscore\\modules\\find.js","resolved":"D:\\selftaught\\Front-end web deverloper\\tools\\parcel-experiment\\node_modules\\underscore\\modules\\findIndex.js"},{"name":"./findKey.js","loc":{"line":3,"column":20,"index":105},"parent":"D:\\selftaught\\Front-end web deverloper\\tools\\parcel-experiment\\node_modules\\underscore\\modules\\find.js","resolved":"D:\\selftaught\\Front-end web deverloper\\tools\\parcel-experiment\\node_modules\\underscore\\modules\\findKey.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = find;\n\nvar _isArrayLike = _interopRequireDefault(require(\"./_isArrayLike.js\"));\n\nvar _findIndex = _interopRequireDefault(require(\"./findIndex.js\"));\n\nvar _findKey = _interopRequireDefault(require(\"./findKey.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// Return the first value which passes a truth test.\nfunction find(obj, predicate, context) {\n  var keyFinder = (0, _isArrayLike.default)(obj) ? _findIndex.default : _findKey.default;\n  var key = keyFinder(obj, predicate, context);\n  if (key !== void 0 && key !== -1) return obj[key];\n}"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":8,"column":0},"source":"node_modules/underscore/modules/find.js","original":{"line":1,"column":0}},{"generated":{"line":10,"column":0},"source":"node_modules/underscore/modules/find.js","original":{"line":2,"column":0}},{"generated":{"line":12,"column":0},"source":"node_modules/underscore/modules/find.js","original":{"line":3,"column":0}},{"generated":{"line":16,"column":0},"source":"node_modules/underscore/modules/find.js","original":{"line":5,"column":0}},{"generated":{"line":17,"column":0},"source":"node_modules/underscore/modules/find.js","original":{"line":6,"column":15}},{"name":"find","generated":{"line":17,"column":9},"source":"node_modules/underscore/modules/find.js","original":{"line":6,"column":24}},{"generated":{"line":17,"column":13},"source":"node_modules/underscore/modules/find.js","original":{"line":6,"column":15}},{"name":"obj","generated":{"line":17,"column":14},"source":"node_modules/underscore/modules/find.js","original":{"line":6,"column":29}},{"generated":{"line":17,"column":17},"source":"node_modules/underscore/modules/find.js","original":{"line":6,"column":15}},{"name":"predicate","generated":{"line":17,"column":19},"source":"node_modules/underscore/modules/find.js","original":{"line":6,"column":34}},{"generated":{"line":17,"column":28},"source":"node_modules/underscore/modules/find.js","original":{"line":6,"column":15}},{"name":"context","generated":{"line":17,"column":30},"source":"node_modules/underscore/modules/find.js","original":{"line":6,"column":45}},{"generated":{"line":17,"column":37},"source":"node_modules/underscore/modules/find.js","original":{"line":6,"column":15}},{"generated":{"line":17,"column":39},"source":"node_modules/underscore/modules/find.js","original":{"line":6,"column":54}},{"generated":{"line":18,"column":0},"source":"node_modules/underscore/modules/find.js","original":{"line":7,"column":2}},{"name":"keyFinder","generated":{"line":18,"column":6},"source":"node_modules/underscore/modules/find.js","original":{"line":7,"column":6}},{"generated":{"line":18,"column":15},"source":"node_modules/underscore/modules/find.js","original":{"line":7,"column":15}},{"generated":{"line":18,"column":18},"source":"node_modules/underscore/modules/find.js","original":{"line":7,"column":18}},{"name":"obj","generated":{"line":18,"column":44},"source":"node_modules/underscore/modules/find.js","original":{"line":7,"column":30}},{"generated":{"line":18,"column":47},"source":"node_modules/underscore/modules/find.js","original":{"line":7,"column":18}},{"name":"findIndex","generated":{"line":18,"column":51},"source":"node_modules/underscore/modules/find.js","original":{"line":7,"column":37}},{"generated":{"line":18,"column":69},"source":"node_modules/underscore/modules/find.js","original":{"line":7,"column":18}},{"name":"findKey","generated":{"line":18,"column":72},"source":"node_modules/underscore/modules/find.js","original":{"line":7,"column":49}},{"generated":{"line":18,"column":88},"source":"node_modules/underscore/modules/find.js","original":{"line":7,"column":2}},{"generated":{"line":19,"column":0},"source":"node_modules/underscore/modules/find.js","original":{"line":8,"column":2}},{"name":"key","generated":{"line":19,"column":6},"source":"node_modules/underscore/modules/find.js","original":{"line":8,"column":6}},{"generated":{"line":19,"column":9},"source":"node_modules/underscore/modules/find.js","original":{"line":8,"column":9}},{"name":"keyFinder","generated":{"line":19,"column":12},"source":"node_modules/underscore/modules/find.js","original":{"line":8,"column":12}},{"generated":{"line":19,"column":21},"source":"node_modules/underscore/modules/find.js","original":{"line":8,"column":21}},{"name":"obj","generated":{"line":19,"column":22},"source":"node_modules/underscore/modules/find.js","original":{"line":8,"column":22}},{"generated":{"line":19,"column":25},"source":"node_modules/underscore/modules/find.js","original":{"line":8,"column":21}},{"name":"predicate","generated":{"line":19,"column":27},"source":"node_modules/underscore/modules/find.js","original":{"line":8,"column":27}},{"generated":{"line":19,"column":36},"source":"node_modules/underscore/modules/find.js","original":{"line":8,"column":21}},{"name":"context","generated":{"line":19,"column":38},"source":"node_modules/underscore/modules/find.js","original":{"line":8,"column":38}},{"generated":{"line":19,"column":45},"source":"node_modules/underscore/modules/find.js","original":{"line":8,"column":21}},{"generated":{"line":19,"column":46},"source":"node_modules/underscore/modules/find.js","original":{"line":8,"column":2}},{"generated":{"line":20,"column":0},"source":"node_modules/underscore/modules/find.js","original":{"line":9,"column":2}},{"name":"key","generated":{"line":20,"column":6},"source":"node_modules/underscore/modules/find.js","original":{"line":9,"column":6}},{"generated":{"line":20,"column":9},"source":"node_modules/underscore/modules/find.js","original":{"line":9,"column":9}},{"generated":{"line":20,"column":14},"source":"node_modules/underscore/modules/find.js","original":{"line":9,"column":14}},{"generated":{"line":20,"column":19},"source":"node_modules/underscore/modules/find.js","original":{"line":9,"column":19}},{"generated":{"line":20,"column":20},"source":"node_modules/underscore/modules/find.js","original":{"line":9,"column":6}},{"name":"key","generated":{"line":20,"column":24},"source":"node_modules/underscore/modules/find.js","original":{"line":9,"column":24}},{"generated":{"line":20,"column":27},"source":"node_modules/underscore/modules/find.js","original":{"line":9,"column":27}},{"generated":{"line":20,"column":32},"source":"node_modules/underscore/modules/find.js","original":{"line":9,"column":32}},{"generated":{"line":20,"column":33},"source":"node_modules/underscore/modules/find.js","original":{"line":9,"column":33}},{"generated":{"line":20,"column":34},"source":"node_modules/underscore/modules/find.js","original":{"line":9,"column":2}},{"generated":{"line":20,"column":36},"source":"node_modules/underscore/modules/find.js","original":{"line":9,"column":36}},{"name":"obj","generated":{"line":20,"column":43},"source":"node_modules/underscore/modules/find.js","original":{"line":9,"column":43}},{"generated":{"line":20,"column":46},"source":"node_modules/underscore/modules/find.js","original":{"line":9,"column":46}},{"name":"key","generated":{"line":20,"column":47},"source":"node_modules/underscore/modules/find.js","original":{"line":9,"column":47}},{"generated":{"line":20,"column":50},"source":"node_modules/underscore/modules/find.js","original":{"line":9,"column":46}},{"generated":{"line":20,"column":51},"source":"node_modules/underscore/modules/find.js","original":{"line":9,"column":36}},{"generated":{"line":21,"column":0},"source":"node_modules/underscore/modules/find.js","original":{"line":10,"column":1}}],"sources":{"node_modules/underscore/modules/find.js":"import isArrayLike from './_isArrayLike.js';\nimport findIndex from './findIndex.js';\nimport findKey from './findKey.js';\n\n// Return the first value which passes a truth test.\nexport default function find(obj, predicate, context) {\n  var keyFinder = isArrayLike(obj) ? findIndex : findKey;\n  var key = keyFinder(obj, predicate, context);\n  if (key !== void 0 && key !== -1) return obj[key];\n}\n"},"lineCount":null}},"error":null,"hash":"7b80adae3f3aa8feec6907286e588c88","cacheData":{"env":{}}}