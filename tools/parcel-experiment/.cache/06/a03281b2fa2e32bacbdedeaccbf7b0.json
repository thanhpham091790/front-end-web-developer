{"id":"node_modules/underscore/modules/wrap.js","dependencies":[{"name":"D:\\selftaught\\Front-end web deverloper\\tools\\parcel-experiment\\package.json","includedInParent":true,"mtime":1650575398222},{"name":"D:\\selftaught\\Front-end web deverloper\\tools\\parcel-experiment\\node_modules\\underscore\\modules\\package.json","includedInParent":true,"mtime":1650575355329},{"name":"./partial.js","loc":{"line":1,"column":20,"index":20},"parent":"D:\\selftaught\\Front-end web deverloper\\tools\\parcel-experiment\\node_modules\\underscore\\modules\\wrap.js","resolved":"D:\\selftaught\\Front-end web deverloper\\tools\\parcel-experiment\\node_modules\\underscore\\modules\\partial.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = wrap;\n\nvar _partial = _interopRequireDefault(require(\"./partial.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// Returns the first function passed as an argument to the second,\n// allowing you to adjust arguments, run code before and after, and\n// conditionally execute the original function.\nfunction wrap(func, wrapper) {\n  return (0, _partial.default)(wrapper, func);\n}"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":8,"column":0},"source":"node_modules/underscore/modules/wrap.js","original":{"line":1,"column":0}},{"generated":{"line":12,"column":0},"source":"node_modules/underscore/modules/wrap.js","original":{"line":3,"column":0}},{"generated":{"line":13,"column":0},"source":"node_modules/underscore/modules/wrap.js","original":{"line":4,"column":0}},{"generated":{"line":14,"column":0},"source":"node_modules/underscore/modules/wrap.js","original":{"line":5,"column":0}},{"generated":{"line":15,"column":0},"source":"node_modules/underscore/modules/wrap.js","original":{"line":6,"column":15}},{"name":"wrap","generated":{"line":15,"column":9},"source":"node_modules/underscore/modules/wrap.js","original":{"line":6,"column":24}},{"generated":{"line":15,"column":13},"source":"node_modules/underscore/modules/wrap.js","original":{"line":6,"column":15}},{"name":"func","generated":{"line":15,"column":14},"source":"node_modules/underscore/modules/wrap.js","original":{"line":6,"column":29}},{"generated":{"line":15,"column":18},"source":"node_modules/underscore/modules/wrap.js","original":{"line":6,"column":15}},{"name":"wrapper","generated":{"line":15,"column":20},"source":"node_modules/underscore/modules/wrap.js","original":{"line":6,"column":35}},{"generated":{"line":15,"column":27},"source":"node_modules/underscore/modules/wrap.js","original":{"line":6,"column":15}},{"generated":{"line":15,"column":29},"source":"node_modules/underscore/modules/wrap.js","original":{"line":6,"column":44}},{"generated":{"line":16,"column":0},"source":"node_modules/underscore/modules/wrap.js","original":{"line":7,"column":2}},{"generated":{"line":16,"column":9},"source":"node_modules/underscore/modules/wrap.js","original":{"line":7,"column":9}},{"name":"wrapper","generated":{"line":16,"column":31},"source":"node_modules/underscore/modules/wrap.js","original":{"line":7,"column":17}},{"generated":{"line":16,"column":38},"source":"node_modules/underscore/modules/wrap.js","original":{"line":7,"column":9}},{"name":"func","generated":{"line":16,"column":40},"source":"node_modules/underscore/modules/wrap.js","original":{"line":7,"column":26}},{"generated":{"line":16,"column":44},"source":"node_modules/underscore/modules/wrap.js","original":{"line":7,"column":9}},{"generated":{"line":16,"column":45},"source":"node_modules/underscore/modules/wrap.js","original":{"line":7,"column":2}},{"generated":{"line":17,"column":0},"source":"node_modules/underscore/modules/wrap.js","original":{"line":8,"column":1}}],"sources":{"node_modules/underscore/modules/wrap.js":"import partial from './partial.js';\n\n// Returns the first function passed as an argument to the second,\n// allowing you to adjust arguments, run code before and after, and\n// conditionally execute the original function.\nexport default function wrap(func, wrapper) {\n  return partial(wrapper, func);\n}\n"},"lineCount":null}},"error":null,"hash":"e97b3fac3fde98bdc99c2e68c5c181fc","cacheData":{"env":{}}}