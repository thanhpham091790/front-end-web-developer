{"id":"node_modules/underscore/modules/_tagTester.js","dependencies":[{"name":"D:\\selftaught\\Front-end web deverloper\\tools\\parcel-experiment\\package.json","includedInParent":true,"mtime":1650575398222},{"name":"D:\\selftaught\\Front-end web deverloper\\tools\\parcel-experiment\\node_modules\\underscore\\modules\\package.json","includedInParent":true,"mtime":1650575355329},{"name":"./_setup.js","loc":{"line":1,"column":25,"index":25},"parent":"D:\\selftaught\\Front-end web deverloper\\tools\\parcel-experiment\\node_modules\\underscore\\modules\\_tagTester.js","resolved":"D:\\selftaught\\Front-end web deverloper\\tools\\parcel-experiment\\node_modules\\underscore\\modules\\_setup.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = tagTester;\n\nvar _setup = require(\"./_setup.js\");\n\n// Internal function for creating a `toString`-based type tester.\nfunction tagTester(name) {\n  var tag = '[object ' + name + ']';\n  return function (obj) {\n    return _setup.toString.call(obj) === tag;\n  };\n}"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":8,"column":0},"source":"node_modules/underscore/modules/_tagTester.js","original":{"line":1,"column":0}},{"generated":{"line":10,"column":0},"source":"node_modules/underscore/modules/_tagTester.js","original":{"line":3,"column":0}},{"generated":{"line":11,"column":0},"source":"node_modules/underscore/modules/_tagTester.js","original":{"line":4,"column":15}},{"name":"tagTester","generated":{"line":11,"column":9},"source":"node_modules/underscore/modules/_tagTester.js","original":{"line":4,"column":24}},{"generated":{"line":11,"column":18},"source":"node_modules/underscore/modules/_tagTester.js","original":{"line":4,"column":15}},{"name":"name","generated":{"line":11,"column":19},"source":"node_modules/underscore/modules/_tagTester.js","original":{"line":4,"column":34}},{"generated":{"line":11,"column":23},"source":"node_modules/underscore/modules/_tagTester.js","original":{"line":4,"column":15}},{"generated":{"line":11,"column":25},"source":"node_modules/underscore/modules/_tagTester.js","original":{"line":4,"column":40}},{"generated":{"line":12,"column":0},"source":"node_modules/underscore/modules/_tagTester.js","original":{"line":5,"column":2}},{"name":"tag","generated":{"line":12,"column":6},"source":"node_modules/underscore/modules/_tagTester.js","original":{"line":5,"column":6}},{"generated":{"line":12,"column":9},"source":"node_modules/underscore/modules/_tagTester.js","original":{"line":5,"column":9}},{"generated":{"line":12,"column":12},"source":"node_modules/underscore/modules/_tagTester.js","original":{"line":5,"column":12}},{"name":"name","generated":{"line":12,"column":25},"source":"node_modules/underscore/modules/_tagTester.js","original":{"line":5,"column":25}},{"generated":{"line":12,"column":29},"source":"node_modules/underscore/modules/_tagTester.js","original":{"line":5,"column":12}},{"generated":{"line":12,"column":32},"source":"node_modules/underscore/modules/_tagTester.js","original":{"line":5,"column":32}},{"generated":{"line":12,"column":35},"source":"node_modules/underscore/modules/_tagTester.js","original":{"line":5,"column":2}},{"generated":{"line":13,"column":0},"source":"node_modules/underscore/modules/_tagTester.js","original":{"line":6,"column":2}},{"generated":{"line":13,"column":9},"source":"node_modules/underscore/modules/_tagTester.js","original":{"line":6,"column":9}},{"name":"obj","generated":{"line":13,"column":19},"source":"node_modules/underscore/modules/_tagTester.js","original":{"line":6,"column":18}},{"generated":{"line":13,"column":22},"source":"node_modules/underscore/modules/_tagTester.js","original":{"line":6,"column":9}},{"generated":{"line":13,"column":24},"source":"node_modules/underscore/modules/_tagTester.js","original":{"line":6,"column":23}},{"generated":{"line":14,"column":0},"source":"node_modules/underscore/modules/_tagTester.js","original":{"line":7,"column":4}},{"name":"toString","generated":{"line":14,"column":11},"source":"node_modules/underscore/modules/_tagTester.js","original":{"line":7,"column":11}},{"name":"call","generated":{"line":14,"column":27},"source":"node_modules/underscore/modules/_tagTester.js","original":{"line":7,"column":20}},{"generated":{"line":14,"column":31},"source":"node_modules/underscore/modules/_tagTester.js","original":{"line":7,"column":11}},{"name":"obj","generated":{"line":14,"column":32},"source":"node_modules/underscore/modules/_tagTester.js","original":{"line":7,"column":25}},{"generated":{"line":14,"column":35},"source":"node_modules/underscore/modules/_tagTester.js","original":{"line":7,"column":11}},{"name":"tag","generated":{"line":14,"column":41},"source":"node_modules/underscore/modules/_tagTester.js","original":{"line":7,"column":34}},{"generated":{"line":14,"column":44},"source":"node_modules/underscore/modules/_tagTester.js","original":{"line":7,"column":4}},{"generated":{"line":15,"column":0},"source":"node_modules/underscore/modules/_tagTester.js","original":{"line":8,"column":3}},{"generated":{"line":15,"column":3},"source":"node_modules/underscore/modules/_tagTester.js","original":{"line":6,"column":2}},{"generated":{"line":16,"column":0},"source":"node_modules/underscore/modules/_tagTester.js","original":{"line":9,"column":1}}],"sources":{"node_modules/underscore/modules/_tagTester.js":"import { toString } from './_setup.js';\n\n// Internal function for creating a `toString`-based type tester.\nexport default function tagTester(name) {\n  var tag = '[object ' + name + ']';\n  return function(obj) {\n    return toString.call(obj) === tag;\n  };\n}\n"},"lineCount":null}},"error":null,"hash":"36a73664359035048003c6ad644cf282","cacheData":{"env":{}}}